{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bac82387",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:18.527860Z",
     "iopub.status.busy": "2025-05-13T02:55:18.526952Z",
     "iopub.status.idle": "2025-05-13T02:55:20.619091Z",
     "shell.execute_reply": "2025-05-13T02:55:20.617686Z"
    },
    "papermill": {
     "duration": 2.101144,
     "end_time": "2025-05-13T02:55:20.620986",
     "exception": false,
     "start_time": "2025-05-13T02:55:18.519842",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Validation Data.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap Fix.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\n",
      "/kaggle/input/gold-price-data/gld_price_data.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "90110b37",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:20.633383Z",
     "iopub.status.busy": "2025-05-13T02:55:20.632776Z",
     "iopub.status.idle": "2025-05-13T02:55:23.300887Z",
     "shell.execute_reply": "2025-05-13T02:55:23.299915Z"
    },
    "papermill": {
     "duration": 2.67638,
     "end_time": "2025-05-13T02:55:23.302705",
     "exception": false,
     "start_time": "2025-05-13T02:55:20.626325",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c40b519c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.314412Z",
     "iopub.status.busy": "2025-05-13T02:55:23.313480Z",
     "iopub.status.idle": "2025-05-13T02:55:23.338062Z",
     "shell.execute_reply": "2025-05-13T02:55:23.337143Z"
    },
    "papermill": {
     "duration": 0.032119,
     "end_time": "2025-05-13T02:55:23.339794",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.307675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data = pd.read_csv(\"/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "12c38695",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.350790Z",
     "iopub.status.busy": "2025-05-13T02:55:23.350460Z",
     "iopub.status.idle": "2025-05-13T02:55:23.379811Z",
     "shell.execute_reply": "2025-05-13T02:55:23.378570Z"
    },
    "papermill": {
     "duration": 0.036778,
     "end_time": "2025-05-13T02:55:23.381612",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.344834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Inflasi</th>\n",
       "      <th>IndONIA</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "      <th>Minyak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/3/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13485</td>\n",
       "      <td>3.49</td>\n",
       "      <td>4.12408</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "      <td>52.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/4/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13478</td>\n",
       "      <td>3.49</td>\n",
       "      <td>4.12935</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "      <td>53.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1/5/2017</td>\n",
       "      <td>607000</td>\n",
       "      <td>13370</td>\n",
       "      <td>3.49</td>\n",
       "      <td>4.12697</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "      <td>53.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1/6/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13347</td>\n",
       "      <td>3.49</td>\n",
       "      <td>4.13105</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "      <td>53.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1/9/2017</td>\n",
       "      <td>602000</td>\n",
       "      <td>13385</td>\n",
       "      <td>3.49</td>\n",
       "      <td>4.14132</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "      <td>51.96</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date   Price   Kurs  Inflasi  IndONIA  Cadangan Devisa  \\\n",
       "0  1/3/2017  606000  13485     3.49  4.12408            116.9   \n",
       "1  1/4/2017  606000  13478     3.49  4.12935            116.9   \n",
       "2  1/5/2017  607000  13370     3.49  4.12697            116.9   \n",
       "3  1/6/2017  606000  13347     3.49  4.13105            116.9   \n",
       "4  1/9/2017  602000  13385     3.49  4.14132            116.9   \n",
       "\n",
       "   Money Supply (M2)  Minyak  \n",
       "0         4936881.99   52.33  \n",
       "1         4936881.99   53.26  \n",
       "2         4936881.99   53.76  \n",
       "3         4936881.99   53.99  \n",
       "4         4936881.99   51.96  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ad5033f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.393302Z",
     "iopub.status.busy": "2025-05-13T02:55:23.392942Z",
     "iopub.status.idle": "2025-05-13T02:55:23.407129Z",
     "shell.execute_reply": "2025-05-13T02:55:23.406230Z"
    },
    "papermill": {
     "duration": 0.02188,
     "end_time": "2025-05-13T02:55:23.408778",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.386898",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Inflasi</th>\n",
       "      <th>IndONIA</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "      <th>Minyak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1927</th>\n",
       "      <td>12/23/2024</td>\n",
       "      <td>1533000</td>\n",
       "      <td>16159</td>\n",
       "      <td>1.57</td>\n",
       "      <td>6.08589</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "      <td>68.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928</th>\n",
       "      <td>12/24/2024</td>\n",
       "      <td>1520000</td>\n",
       "      <td>16208</td>\n",
       "      <td>1.57</td>\n",
       "      <td>6.14320</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "      <td>69.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1929</th>\n",
       "      <td>12/27/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16251</td>\n",
       "      <td>1.57</td>\n",
       "      <td>6.15811</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "      <td>70.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1930</th>\n",
       "      <td>12/30/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16162</td>\n",
       "      <td>1.57</td>\n",
       "      <td>6.15446</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "      <td>70.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>12/31/2024</td>\n",
       "      <td>1515000</td>\n",
       "      <td>16157</td>\n",
       "      <td>1.57</td>\n",
       "      <td>6.18031</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "      <td>71.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date    Price   Kurs  Inflasi  IndONIA  Cadangan Devisa  \\\n",
       "1927  12/23/2024  1533000  16159     1.57  6.08589            155.7   \n",
       "1928  12/24/2024  1520000  16208     1.57  6.14320            155.7   \n",
       "1929  12/27/2024  1528000  16251     1.57  6.15811            155.7   \n",
       "1930  12/30/2024  1528000  16162     1.57  6.15446            155.7   \n",
       "1931  12/31/2024  1515000  16157     1.57  6.18031            155.7   \n",
       "\n",
       "      Money Supply (M2)  Minyak  \n",
       "1927         9210815.72   68.81  \n",
       "1928         9210815.72   69.64  \n",
       "1929         9210815.72   70.18  \n",
       "1930         9210815.72   70.53  \n",
       "1931         9210815.72   71.25  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " gold_data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7a876438",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.420582Z",
     "iopub.status.busy": "2025-05-13T02:55:23.420184Z",
     "iopub.status.idle": "2025-05-13T02:55:23.426569Z",
     "shell.execute_reply": "2025-05-13T02:55:23.425547Z"
    },
    "papermill": {
     "duration": 0.014155,
     "end_time": "2025-05-13T02:55:23.428271",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.414116",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1932, 8)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f862eb39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.440859Z",
     "iopub.status.busy": "2025-05-13T02:55:23.440004Z",
     "iopub.status.idle": "2025-05-13T02:55:23.463860Z",
     "shell.execute_reply": "2025-05-13T02:55:23.462621Z"
    },
    "papermill": {
     "duration": 0.031491,
     "end_time": "2025-05-13T02:55:23.465433",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.433942",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 8 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Inflasi            1932 non-null   float64\n",
      " 4   IndONIA            1932 non-null   float64\n",
      " 5   Cadangan Devisa    1932 non-null   float64\n",
      " 6   Money Supply (M2)  1932 non-null   float64\n",
      " 7   Minyak             1932 non-null   float64\n",
      "dtypes: float64(5), int64(2), object(1)\n",
      "memory usage: 120.9+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "adc74b56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.478376Z",
     "iopub.status.busy": "2025-05-13T02:55:23.477373Z",
     "iopub.status.idle": "2025-05-13T02:55:23.491965Z",
     "shell.execute_reply": "2025-05-13T02:55:23.490942Z"
    },
    "papermill": {
     "duration": 0.022632,
     "end_time": "2025-05-13T02:55:23.493508",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.470876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Money Supply (M2)  1932 non-null   float64\n",
      " 4   Minyak             1932 non-null   float64\n",
      "dtypes: float64(2), int64(2), object(1)\n",
      "memory usage: 75.6+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.drop(['Inflasi', 'IndONIA', 'Cadangan Devisa'], axis=1, inplace=True)\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fd435fa5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.505937Z",
     "iopub.status.busy": "2025-05-13T02:55:23.505411Z",
     "iopub.status.idle": "2025-05-13T02:55:23.521224Z",
     "shell.execute_reply": "2025-05-13T02:55:23.520361Z"
    },
    "papermill": {
     "duration": 0.023722,
     "end_time": "2025-05-13T02:55:23.522763",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.499041",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data['Date'] = pd.to_datetime(gold_data['Date'])\n",
    "gold_data.sort_values(by='Date', inplace=True)\n",
    "gold_data.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8ca8bbb5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.536518Z",
     "iopub.status.busy": "2025-05-13T02:55:23.535428Z",
     "iopub.status.idle": "2025-05-13T02:55:23.548627Z",
     "shell.execute_reply": "2025-05-13T02:55:23.547577Z"
    },
    "papermill": {
     "duration": 0.021545,
     "end_time": "2025-05-13T02:55:23.550239",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.528694",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype         \n",
      "---  ------             --------------  -----         \n",
      " 0   Date               1932 non-null   datetime64[ns]\n",
      " 1   Price              1932 non-null   float64       \n",
      " 2   Kurs               1932 non-null   float64       \n",
      " 3   Money Supply (M2)  1932 non-null   float64       \n",
      " 4   Minyak             1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(4)\n",
      "memory usage: 75.6 KB\n"
     ]
    }
   ],
   "source": [
    "# Preprocess numeric columns\n",
    "NumCols = gold_data.columns.drop(['Date'])\n",
    "gold_data[NumCols] = gold_data[NumCols].astype('float64')\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6925250c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.562581Z",
     "iopub.status.busy": "2025-05-13T02:55:23.562275Z",
     "iopub.status.idle": "2025-05-13T02:55:23.570461Z",
     "shell.execute_reply": "2025-05-13T02:55:23.569509Z"
    },
    "papermill": {
     "duration": 0.016565,
     "end_time": "2025-05-13T02:55:23.572325",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.555760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date                 0\n",
       "Price                0\n",
       "Kurs                 0\n",
       "Money Supply (M2)    0\n",
       "Minyak               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5999e091",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.585614Z",
     "iopub.status.busy": "2025-05-13T02:55:23.584824Z",
     "iopub.status.idle": "2025-05-13T02:55:23.592111Z",
     "shell.execute_reply": "2025-05-13T02:55:23.591145Z"
    },
    "papermill": {
     "duration": 0.015295,
     "end_time": "2025-05-13T02:55:23.593673",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.578378",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "print(\"Duplicates:\", gold_data.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b429c323",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.606865Z",
     "iopub.status.busy": "2025-05-13T02:55:23.606032Z",
     "iopub.status.idle": "2025-05-13T02:55:23.632985Z",
     "shell.execute_reply": "2025-05-13T02:55:23.631893Z"
    },
    "papermill": {
     "duration": 0.035264,
     "end_time": "2025-05-13T02:55:23.634748",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.599484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "      <th>Minyak</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1932</td>\n",
       "      <td>1.932000e+03</td>\n",
       "      <td>1932.000000</td>\n",
       "      <td>1.932000e+03</td>\n",
       "      <td>1932.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2020-12-31 10:34:17.142857216</td>\n",
       "      <td>9.065005e+05</td>\n",
       "      <td>14578.114389</td>\n",
       "      <td>6.955181e+06</td>\n",
       "      <td>65.824322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2017-01-03 00:00:00</td>\n",
       "      <td>5.970000e+05</td>\n",
       "      <td>13154.000000</td>\n",
       "      <td>4.936882e+06</td>\n",
       "      <td>11.570000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019-01-09 18:00:00</td>\n",
       "      <td>6.710000e+05</td>\n",
       "      <td>14078.500000</td>\n",
       "      <td>5.670975e+06</td>\n",
       "      <td>53.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2021-01-04 12:00:00</td>\n",
       "      <td>9.340000e+05</td>\n",
       "      <td>14418.000000</td>\n",
       "      <td>6.817622e+06</td>\n",
       "      <td>66.745000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2022-12-19 06:00:00</td>\n",
       "      <td>1.024000e+06</td>\n",
       "      <td>15178.000000</td>\n",
       "      <td>8.293283e+06</td>\n",
       "      <td>77.095000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2024-12-31 00:00:00</td>\n",
       "      <td>1.567000e+06</td>\n",
       "      <td>16741.000000</td>\n",
       "      <td>9.210816e+06</td>\n",
       "      <td>119.780000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.332594e+05</td>\n",
       "      <td>801.869612</td>\n",
       "      <td>1.328749e+06</td>\n",
       "      <td>16.933219</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Date         Price          Kurs  \\\n",
       "count                           1932  1.932000e+03   1932.000000   \n",
       "mean   2020-12-31 10:34:17.142857216  9.065005e+05  14578.114389   \n",
       "min              2017-01-03 00:00:00  5.970000e+05  13154.000000   \n",
       "25%              2019-01-09 18:00:00  6.710000e+05  14078.500000   \n",
       "50%              2021-01-04 12:00:00  9.340000e+05  14418.000000   \n",
       "75%              2022-12-19 06:00:00  1.024000e+06  15178.000000   \n",
       "max              2024-12-31 00:00:00  1.567000e+06  16741.000000   \n",
       "std                              NaN  2.332594e+05    801.869612   \n",
       "\n",
       "       Money Supply (M2)       Minyak  \n",
       "count       1.932000e+03  1932.000000  \n",
       "mean        6.955181e+06    65.824322  \n",
       "min         4.936882e+06    11.570000  \n",
       "25%         5.670975e+06    53.500000  \n",
       "50%         6.817622e+06    66.745000  \n",
       "75%         8.293283e+06    77.095000  \n",
       "max         9.210816e+06   119.780000  \n",
       "std         1.328749e+06    16.933219  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "78a6850e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.648126Z",
     "iopub.status.busy": "2025-05-13T02:55:23.647835Z",
     "iopub.status.idle": "2025-05-13T02:55:23.653598Z",
     "shell.execute_reply": "2025-05-13T02:55:23.652659Z"
    },
    "papermill": {
     "duration": 0.01376,
     "end_time": "2025-05-13T02:55:23.655104",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.641344",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = gold_data.drop([\"Date\", \"Price\"], axis=1)\n",
    "Y = gold_data[\"Price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7f8fab94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.668040Z",
     "iopub.status.busy": "2025-05-13T02:55:23.667758Z",
     "iopub.status.idle": "2025-05-13T02:55:23.676133Z",
     "shell.execute_reply": "2025-05-13T02:55:23.674939Z"
    },
    "papermill": {
     "duration": 0.016734,
     "end_time": "2025-05-13T02:55:23.677785",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.661051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Kurs  Money Supply (M2)  Minyak\n",
      "0     13485.0         4936881.99   52.33\n",
      "1     13478.0         4936881.99   53.26\n",
      "2     13370.0         4936881.99   53.76\n",
      "3     13347.0         4936881.99   53.99\n",
      "4     13385.0         4936881.99   51.96\n",
      "...       ...                ...     ...\n",
      "1927  16159.0         9210815.72   68.81\n",
      "1928  16208.0         9210815.72   69.64\n",
      "1929  16251.0         9210815.72   70.18\n",
      "1930  16162.0         9210815.72   70.53\n",
      "1931  16157.0         9210815.72   71.25\n",
      "\n",
      "[1932 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d96d43d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.691646Z",
     "iopub.status.busy": "2025-05-13T02:55:23.691353Z",
     "iopub.status.idle": "2025-05-13T02:55:23.697588Z",
     "shell.execute_reply": "2025-05-13T02:55:23.696560Z"
    },
    "papermill": {
     "duration": 0.015085,
     "end_time": "2025-05-13T02:55:23.699143",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.684058",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        606000.0\n",
      "1        606000.0\n",
      "2        607000.0\n",
      "3        606000.0\n",
      "4        602000.0\n",
      "          ...    \n",
      "1927    1533000.0\n",
      "1928    1520000.0\n",
      "1929    1528000.0\n",
      "1930    1528000.0\n",
      "1931    1515000.0\n",
      "Name: Price, Length: 1932, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2ecd354a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.712341Z",
     "iopub.status.busy": "2025-05-13T02:55:23.711967Z",
     "iopub.status.idle": "2025-05-13T02:55:23.719107Z",
     "shell.execute_reply": "2025-05-13T02:55:23.718232Z"
    },
    "papermill": {
     "duration": 0.015515,
     "end_time": "2025-05-13T02:55:23.720732",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.705217",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0a3177a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.734627Z",
     "iopub.status.busy": "2025-05-13T02:55:23.734313Z",
     "iopub.status.idle": "2025-05-13T02:55:23.738936Z",
     "shell.execute_reply": "2025-05-13T02:55:23.738046Z"
    },
    "papermill": {
     "duration": 0.014066,
     "end_time": "2025-05-13T02:55:23.740953",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.726887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "regressor = RandomForestRegressor(n_estimators=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4bc54694",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:23.755175Z",
     "iopub.status.busy": "2025-05-13T02:55:23.754877Z",
     "iopub.status.idle": "2025-05-13T02:55:24.260582Z",
     "shell.execute_reply": "2025-05-13T02:55:24.259502Z"
    },
    "papermill": {
     "duration": 0.51414,
     "end_time": "2025-05-13T02:55:24.262144",
     "exception": false,
     "start_time": "2025-05-13T02:55:23.748004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor()"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "775f81e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:24.276518Z",
     "iopub.status.busy": "2025-05-13T02:55:24.276143Z",
     "iopub.status.idle": "2025-05-13T02:55:24.294887Z",
     "shell.execute_reply": "2025-05-13T02:55:24.293902Z"
    },
    "papermill": {
     "duration": 0.027855,
     "end_time": "2025-05-13T02:55:24.296596",
     "exception": false,
     "start_time": "2025-05-13T02:55:24.268741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data_prediction = regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "6a960d1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:24.310789Z",
     "iopub.status.busy": "2025-05-13T02:55:24.310456Z",
     "iopub.status.idle": "2025-05-13T02:55:24.318674Z",
     "shell.execute_reply": "2025-05-13T02:55:24.317392Z"
    },
    "papermill": {
     "duration": 0.017562,
     "end_time": "2025-05-13T02:55:24.320551",
     "exception": false,
     "start_time": "2025-05-13T02:55:24.302989",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 627700. 1275200.  761990.  927780.  942740.  941420.  660240.  943680.\n",
      "  937530.  782130.  926060.  605350.  917030.  964720. 1407390.  761240.\n",
      " 1370230.  611510.  673770.  940210.  668020.  666130.  758500.  629590.\n",
      "  670370. 1392010. 1069030.  980360. 1070670. 1061130.  944860.  947990.\n",
      "  950610.  949350. 1036940.  630210.  654320.  606620.  713350.  610780.\n",
      "  616090. 1048520.  953340.  658660. 1011360. 1012390. 1011300.  664240.\n",
      "  615530. 1131340.  729990. 1057120.  599590. 1529860. 1327000.  944170.\n",
      " 1111390. 1062850.  939030. 1008780.  996610. 1106050. 1069640.  978250.\n",
      " 1025110. 1209710.  653550.  661845.  961330.  943100. 1503540.  668355.\n",
      " 1516160.  768490.  898450.  671460. 1069510. 1026450. 1054890. 1130760.\n",
      "  607460.  664310. 1037750.  713100.  952410.  760740.  628350. 1386300.\n",
      "  980140. 1383310.  631890.  663655. 1132470.  930680. 1404330.  943940.\n",
      " 1054550.  690810.  763160.  759770.  609980.  671895. 1008170. 1525760.\n",
      "  968630.  616140. 1407990.  944250. 1488130.  920180. 1010340.  959010.\n",
      "  661620.  996230. 1175840.  927540.  611280.  668840. 1018350.  611580.\n",
      "  759460.  609930.  629020.  673140.  968180.  939190. 1329790.  974800.\n",
      " 1078450. 1069230.  668080. 1404070.  927280. 1108720.  664680.  935080.\n",
      "  932400.  940140.  763135.  942450. 1006800.  780430.  937130.  639650.\n",
      "  945230.  605480. 1072860.  632840.  611760. 1030220.  668890. 1022150.\n",
      " 1333120. 1509320.  971680. 1130330. 1015360.  982340.  670960. 1130880.\n",
      "  639090.  921270.  780800.  945330.  766780.  652670.  951340. 1067260.\n",
      "  975600.  711065.  665210.  968110.  609570.  658560.  933440. 1053080.\n",
      "  941900. 1483170.  946350.  951020.  956460.  609510. 1273270.  953070.\n",
      "  655380.  613600.  626230. 1071580.  668820.  948070.  919130.  943410.\n",
      "  931200.  936610.  659740.  620670.  669610. 1017330.  670420.  951340.\n",
      "  621130.  600980.  609620.  936890. 1007040. 1125900. 1469910.  757680.\n",
      " 1016720.  989880.  610510. 1033230. 1341970. 1093710. 1472300. 1077100.\n",
      "  978020.  760650. 1048370. 1015220. 1521350.  973360.  639070.  990810.\n",
      "  673130.  679920.  984990.  660460.  925290.  699280.  921440.  632170.\n",
      "  902310.  637700.  785650.  667900. 1074600.  910550.  958640.  664500.\n",
      " 1073240. 1107140.  770250.  915050.  665200.  654140. 1364260.  692905.\n",
      " 1023220.  924820.  921980.  654250.  935320.  935000.  638630.  639770.\n",
      " 1118120.  637750. 1522620.  926550.  668590.  672510. 1324860. 1520980.\n",
      "  652970.  787620.  979380. 1360670.  654860.  781490. 1407360. 1386290.\n",
      "  929700.  629040.  955540.  933420.  942580.  891680. 1137070.  917900.\n",
      "  672200.  712170.  934420.  638880.  966890. 1122630.  606990. 1048990.\n",
      " 1070820.  953070.  667240.  991410.  995600.  660560. 1417280. 1060300.\n",
      " 1124400. 1409570. 1073310. 1401930. 1072170. 1404640.  773060.  958350.\n",
      "  940680.  633350. 1015370.  713160.  749735.  942630.  983000.  990590.\n",
      "  674325.  931900.  616180.  609980. 1198670.  712115.  602780.  675240.\n",
      " 1209710.  957550.  925860.  939790.  650870.  964780. 1012270.  923300.\n",
      "  981920.  945730. 1273990.  614210.  659800.  659945. 1017040.  604830.\n",
      "  991600.  949110. 1066380.  952170.  789160.  639570.  757390. 1532170.\n",
      " 1038130.  936600. 1057270.  949830. 1417250. 1075890.  793140.  785000.\n",
      "  917110.  980860.  608750.  918080.  997720.  960710.  648330. 1103880.\n",
      "  674550. 1048600.  625620.  691600. 1026550.  976870.  667470.  717880.\n",
      "  936690. 1013170.  903000.  712130. 1358200. 1128880. 1498180.  937030.\n",
      "  662970.  963950.  939110.  978310.  612420.  897700.  957960.  670595.\n",
      "  607640. 1129240.  940440.]\n"
     ]
    }
   ],
   "source": [
    "print(test_data_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e45b8efc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:24.334659Z",
     "iopub.status.busy": "2025-05-13T02:55:24.334329Z",
     "iopub.status.idle": "2025-05-13T02:55:24.341137Z",
     "shell.execute_reply": "2025-05-13T02:55:24.340017Z"
    },
    "papermill": {
     "duration": 0.015619,
     "end_time": "2025-05-13T02:55:24.342702",
     "exception": false,
     "start_time": "2025-05-13T02:55:24.327083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R squared error:  0.9976829430070443\n"
     ]
    }
   ],
   "source": [
    "error_score = metrics.r2_score(Y_test, test_data_prediction)\n",
    "print(\"R squared error: \", error_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "e088e15c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:24.356689Z",
     "iopub.status.busy": "2025-05-13T02:55:24.356402Z",
     "iopub.status.idle": "2025-05-13T02:55:24.360888Z",
     "shell.execute_reply": "2025-05-13T02:55:24.360027Z"
    },
    "papermill": {
     "duration": 0.013029,
     "end_time": "2025-05-13T02:55:24.362322",
     "exception": false,
     "start_time": "2025-05-13T02:55:24.349293",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Y_test = list(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a15a355f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T02:55:24.376489Z",
     "iopub.status.busy": "2025-05-13T02:55:24.376129Z",
     "iopub.status.idle": "2025-05-13T02:55:24.729102Z",
     "shell.execute_reply": "2025-05-13T02:55:24.727705Z"
    },
    "papermill": {
     "duration": 0.361804,
     "end_time": "2025-05-13T02:55:24.730721",
     "exception": false,
     "start_time": "2025-05-13T02:55:24.368917",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Y_test, color=\"blue\", label=\"Actual Value\")\n",
    "plt.plot(test_data_prediction, color=\"green\", label=\"Predicted Value\")\n",
    "plt.title(\"Actual Price vs Predicted Price\")\n",
    "plt.xlabel(\"Number of values\")\n",
    "plt.ylabel(\"GLD Price\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11770496,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 145424,
     "sourceId": 339411,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.905244,
   "end_time": "2025-05-13T02:55:25.361957",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-13T02:55:13.456713",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
