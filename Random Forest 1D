{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9099733d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:47.826993Z",
     "iopub.status.busy": "2025-06-29T08:46:47.826119Z",
     "iopub.status.idle": "2025-06-29T08:46:49.713528Z",
     "shell.execute_reply": "2025-06-29T08:46:49.712427Z"
    },
    "papermill": {
     "duration": 1.89569,
     "end_time": "2025-06-29T08:46:49.715104",
     "exception": false,
     "start_time": "2025-06-29T08:46:47.819414",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8694b8ec",
   "metadata": {
    "papermill": {
     "duration": 0.004368,
     "end_time": "2025-06-29T08:46:49.724542",
     "exception": false,
     "start_time": "2025-06-29T08:46:49.720174",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest\n",
    "- Skenario 1D: Menggunakan harga emas historis + Money Supply (M2)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "68f97b96",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:49.734444Z",
     "iopub.status.busy": "2025-06-29T08:46:49.734094Z",
     "iopub.status.idle": "2025-06-29T08:46:52.402801Z",
     "shell.execute_reply": "2025-06-29T08:46:52.401793Z"
    },
    "papermill": {
     "duration": 2.675584,
     "end_time": "2025-06-29T08:46:52.404479",
     "exception": false,
     "start_time": "2025-06-29T08:46:49.728895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0d09fbd9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.415226Z",
     "iopub.status.busy": "2025-06-29T08:46:52.414796Z",
     "iopub.status.idle": "2025-06-29T08:46:52.437678Z",
     "shell.execute_reply": "2025-06-29T08:46:52.436937Z"
    },
    "papermill": {
     "duration": 0.029889,
     "end_time": "2025-06-29T08:46:52.439149",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.409260",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data = pd.read_csv(\"/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cddf84e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.449861Z",
     "iopub.status.busy": "2025-06-29T08:46:52.449312Z",
     "iopub.status.idle": "2025-06-29T08:46:52.476169Z",
     "shell.execute_reply": "2025-06-29T08:46:52.475239Z"
    },
    "papermill": {
     "duration": 0.033518,
     "end_time": "2025-06-29T08:46:52.477517",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.443999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/3/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13485</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/4/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13478</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1/5/2017</td>\n",
       "      <td>607000</td>\n",
       "      <td>13370</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1/6/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13347</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1/9/2017</td>\n",
       "      <td>602000</td>\n",
       "      <td>13385</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date   Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "0  1/3/2017  606000  13485            116.9         4936881.99\n",
       "1  1/4/2017  606000  13478            116.9         4936881.99\n",
       "2  1/5/2017  607000  13370            116.9         4936881.99\n",
       "3  1/6/2017  606000  13347            116.9         4936881.99\n",
       "4  1/9/2017  602000  13385            116.9         4936881.99"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "288a36e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.488000Z",
     "iopub.status.busy": "2025-06-29T08:46:52.487663Z",
     "iopub.status.idle": "2025-06-29T08:46:52.496963Z",
     "shell.execute_reply": "2025-06-29T08:46:52.496223Z"
    },
    "papermill": {
     "duration": 0.015837,
     "end_time": "2025-06-29T08:46:52.498172",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.482335",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1927</th>\n",
       "      <td>12/23/2024</td>\n",
       "      <td>1533000</td>\n",
       "      <td>16159</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928</th>\n",
       "      <td>12/24/2024</td>\n",
       "      <td>1520000</td>\n",
       "      <td>16208</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1929</th>\n",
       "      <td>12/27/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16251</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1930</th>\n",
       "      <td>12/30/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16162</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>12/31/2024</td>\n",
       "      <td>1515000</td>\n",
       "      <td>16157</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date    Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "1927  12/23/2024  1533000  16159            155.7         9210815.72\n",
       "1928  12/24/2024  1520000  16208            155.7         9210815.72\n",
       "1929  12/27/2024  1528000  16251            155.7         9210815.72\n",
       "1930  12/30/2024  1528000  16162            155.7         9210815.72\n",
       "1931  12/31/2024  1515000  16157            155.7         9210815.72"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " gold_data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9756fcd7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.508696Z",
     "iopub.status.busy": "2025-06-29T08:46:52.508437Z",
     "iopub.status.idle": "2025-06-29T08:46:52.513621Z",
     "shell.execute_reply": "2025-06-29T08:46:52.512901Z"
    },
    "papermill": {
     "duration": 0.011867,
     "end_time": "2025-06-29T08:46:52.514950",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.503083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1932, 5)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "354f0dce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.525775Z",
     "iopub.status.busy": "2025-06-29T08:46:52.525545Z",
     "iopub.status.idle": "2025-06-29T08:46:52.549966Z",
     "shell.execute_reply": "2025-06-29T08:46:52.548926Z"
    },
    "papermill": {
     "duration": 0.031456,
     "end_time": "2025-06-29T08:46:52.551385",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.519929",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Cadangan Devisa    1932 non-null   float64\n",
      " 4   Money Supply (M2)  1932 non-null   float64\n",
      "dtypes: float64(2), int64(2), object(1)\n",
      "memory usage: 75.6+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "04716954",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.562691Z",
     "iopub.status.busy": "2025-06-29T08:46:52.562384Z",
     "iopub.status.idle": "2025-06-29T08:46:52.577157Z",
     "shell.execute_reply": "2025-06-29T08:46:52.576073Z"
    },
    "papermill": {
     "duration": 0.022003,
     "end_time": "2025-06-29T08:46:52.578435",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.556432",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 3 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Money Supply (M2)  1932 non-null   float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 45.4+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.drop(['Kurs', 'Cadangan Devisa'], axis=1, inplace=True)\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7c98e304",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.590613Z",
     "iopub.status.busy": "2025-06-29T08:46:52.589994Z",
     "iopub.status.idle": "2025-06-29T08:46:52.603853Z",
     "shell.execute_reply": "2025-06-29T08:46:52.603229Z"
    },
    "papermill": {
     "duration": 0.020942,
     "end_time": "2025-06-29T08:46:52.605156",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.584214",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data['Date'] = pd.to_datetime(gold_data['Date'])\n",
    "gold_data.sort_values(by='Date', ascending=True, inplace=True)\n",
    "gold_data.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2e365af5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.615808Z",
     "iopub.status.busy": "2025-06-29T08:46:52.615564Z",
     "iopub.status.idle": "2025-06-29T08:46:52.625659Z",
     "shell.execute_reply": "2025-06-29T08:46:52.624700Z"
    },
    "papermill": {
     "duration": 0.01675,
     "end_time": "2025-06-29T08:46:52.626951",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.610201",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 3 columns):\n",
      " #   Column             Non-Null Count  Dtype         \n",
      "---  ------             --------------  -----         \n",
      " 0   Date               1932 non-null   datetime64[ns]\n",
      " 1   Price              1932 non-null   float64       \n",
      " 2   Money Supply (M2)  1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(2)\n",
      "memory usage: 45.4 KB\n"
     ]
    }
   ],
   "source": [
    "# Preprocess numeric columns\n",
    "NumCols = gold_data.columns.drop(['Date'])\n",
    "gold_data[NumCols] = gold_data[NumCols].astype('float64')\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ac19d5aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.637838Z",
     "iopub.status.busy": "2025-06-29T08:46:52.637591Z",
     "iopub.status.idle": "2025-06-29T08:46:52.643779Z",
     "shell.execute_reply": "2025-06-29T08:46:52.643167Z"
    },
    "papermill": {
     "duration": 0.012985,
     "end_time": "2025-06-29T08:46:52.645055",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.632070",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date                 0\n",
       "Price                0\n",
       "Money Supply (M2)    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bbedd598",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.657014Z",
     "iopub.status.busy": "2025-06-29T08:46:52.656716Z",
     "iopub.status.idle": "2025-06-29T08:46:52.662602Z",
     "shell.execute_reply": "2025-06-29T08:46:52.661860Z"
    },
    "papermill": {
     "duration": 0.012996,
     "end_time": "2025-06-29T08:46:52.663787",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.650791",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "print(\"Duplicates:\", gold_data.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "97ae3452",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.676510Z",
     "iopub.status.busy": "2025-06-29T08:46:52.676152Z",
     "iopub.status.idle": "2025-06-29T08:46:52.696526Z",
     "shell.execute_reply": "2025-06-29T08:46:52.695682Z"
    },
    "papermill": {
     "duration": 0.02897,
     "end_time": "2025-06-29T08:46:52.697858",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.668888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1932</td>\n",
       "      <td>1.932000e+03</td>\n",
       "      <td>1.932000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2020-12-31 10:34:17.142857216</td>\n",
       "      <td>9.065005e+05</td>\n",
       "      <td>6.955181e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2017-01-03 00:00:00</td>\n",
       "      <td>5.970000e+05</td>\n",
       "      <td>4.936882e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019-01-09 18:00:00</td>\n",
       "      <td>6.710000e+05</td>\n",
       "      <td>5.670975e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2021-01-04 12:00:00</td>\n",
       "      <td>9.340000e+05</td>\n",
       "      <td>6.817622e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2022-12-19 06:00:00</td>\n",
       "      <td>1.024000e+06</td>\n",
       "      <td>8.293283e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2024-12-31 00:00:00</td>\n",
       "      <td>1.567000e+06</td>\n",
       "      <td>9.210816e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.332594e+05</td>\n",
       "      <td>1.328749e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Date         Price  Money Supply (M2)\n",
       "count                           1932  1.932000e+03       1.932000e+03\n",
       "mean   2020-12-31 10:34:17.142857216  9.065005e+05       6.955181e+06\n",
       "min              2017-01-03 00:00:00  5.970000e+05       4.936882e+06\n",
       "25%              2019-01-09 18:00:00  6.710000e+05       5.670975e+06\n",
       "50%              2021-01-04 12:00:00  9.340000e+05       6.817622e+06\n",
       "75%              2022-12-19 06:00:00  1.024000e+06       8.293283e+06\n",
       "max              2024-12-31 00:00:00  1.567000e+06       9.210816e+06\n",
       "std                              NaN  2.332594e+05       1.328749e+06"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7155c6d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.710002Z",
     "iopub.status.busy": "2025-06-29T08:46:52.709677Z",
     "iopub.status.idle": "2025-06-29T08:46:52.714779Z",
     "shell.execute_reply": "2025-06-29T08:46:52.713934Z"
    },
    "papermill": {
     "duration": 0.012705,
     "end_time": "2025-06-29T08:46:52.716330",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.703625",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = gold_data.drop([\"Date\", \"Price\"], axis=1)\n",
    "Y = gold_data[\"Price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1fdd955a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.728212Z",
     "iopub.status.busy": "2025-06-29T08:46:52.727899Z",
     "iopub.status.idle": "2025-06-29T08:46:52.734305Z",
     "shell.execute_reply": "2025-06-29T08:46:52.733520Z"
    },
    "papermill": {
     "duration": 0.013849,
     "end_time": "2025-06-29T08:46:52.735576",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.721727",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Money Supply (M2)\n",
      "0            4936881.99\n",
      "1            4936881.99\n",
      "2            4936881.99\n",
      "3            4936881.99\n",
      "4            4936881.99\n",
      "...                 ...\n",
      "1927         9210815.72\n",
      "1928         9210815.72\n",
      "1929         9210815.72\n",
      "1930         9210815.72\n",
      "1931         9210815.72\n",
      "\n",
      "[1932 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9327e884",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.747692Z",
     "iopub.status.busy": "2025-06-29T08:46:52.747129Z",
     "iopub.status.idle": "2025-06-29T08:46:52.752572Z",
     "shell.execute_reply": "2025-06-29T08:46:52.751523Z"
    },
    "papermill": {
     "duration": 0.012854,
     "end_time": "2025-06-29T08:46:52.753810",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.740956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        606000.0\n",
      "1        606000.0\n",
      "2        607000.0\n",
      "3        606000.0\n",
      "4        602000.0\n",
      "          ...    \n",
      "1927    1533000.0\n",
      "1928    1520000.0\n",
      "1929    1528000.0\n",
      "1930    1528000.0\n",
      "1931    1515000.0\n",
      "Name: Price, Length: 1932, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bda917f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.766251Z",
     "iopub.status.busy": "2025-06-29T08:46:52.765993Z",
     "iopub.status.idle": "2025-06-29T08:46:52.771103Z",
     "shell.execute_reply": "2025-06-29T08:46:52.770412Z"
    },
    "papermill": {
     "duration": 0.012894,
     "end_time": "2025-06-29T08:46:52.772413",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.759519",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_size = int(len(X) * 0.8)\n",
    "X_train, X_test = X[:train_size], X[train_size:]\n",
    "Y_train, Y_test = Y[:train_size], Y[train_size:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "697f78d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.784990Z",
     "iopub.status.busy": "2025-06-29T08:46:52.784183Z",
     "iopub.status.idle": "2025-06-29T08:46:52.788141Z",
     "shell.execute_reply": "2025-06-29T08:46:52.787394Z"
    },
    "papermill": {
     "duration": 0.011703,
     "end_time": "2025-06-29T08:46:52.789689",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.777986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "61121efa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.801994Z",
     "iopub.status.busy": "2025-06-29T08:46:52.801690Z",
     "iopub.status.idle": "2025-06-29T08:46:52.805431Z",
     "shell.execute_reply": "2025-06-29T08:46:52.804786Z"
    },
    "papermill": {
     "duration": 0.0116,
     "end_time": "2025-06-29T08:46:52.806828",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.795228",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "regressor = RandomForestRegressor(n_estimators=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c346c879",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.818501Z",
     "iopub.status.busy": "2025-06-29T08:46:52.818222Z",
     "iopub.status.idle": "2025-06-29T08:46:52.981457Z",
     "shell.execute_reply": "2025-06-29T08:46:52.980640Z"
    },
    "papermill": {
     "duration": 0.170434,
     "end_time": "2025-06-29T08:46:52.982849",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.812415",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor()"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "bcf6ed40",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:52.997078Z",
     "iopub.status.busy": "2025-06-29T08:46:52.996439Z",
     "iopub.status.idle": "2025-06-29T08:46:53.006405Z",
     "shell.execute_reply": "2025-06-29T08:46:53.005692Z"
    },
    "papermill": {
     "duration": 0.018604,
     "end_time": "2025-06-29T08:46:53.007741",
     "exception": false,
     "start_time": "2025-06-29T08:46:52.989137",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data_prediction = regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "621a45cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.021082Z",
     "iopub.status.busy": "2025-06-29T08:46:53.020325Z",
     "iopub.status.idle": "2025-06-29T08:46:53.026902Z",
     "shell.execute_reply": "2025-06-29T08:46:53.026171Z"
    },
    "papermill": {
     "duration": 0.014865,
     "end_time": "2025-06-29T08:46:53.028597",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.013732",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1063263.00391378 1063263.00391378 1063263.00391378 1063263.00391378\n",
      " 1063263.00391378 1063263.00391378 1063263.00391378 1063263.00391378\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1069789.39063197\n",
      " 1069789.39063197 1069789.39063197 1069789.39063197 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103 1004610.12503103\n",
      " 1004610.12503103 1004610.12503103 1004610.12503103]\n"
     ]
    }
   ],
   "source": [
    "print(test_data_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "027851ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.042045Z",
     "iopub.status.busy": "2025-06-29T08:46:53.041299Z",
     "iopub.status.idle": "2025-06-29T08:46:53.052375Z",
     "shell.execute_reply": "2025-06-29T08:46:53.051543Z"
    },
    "papermill": {
     "duration": 0.018785,
     "end_time": "2025-06-29T08:46:53.053564",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.034779",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R squared error:  -2.0180958570907057\n",
      "RMSE: 297510.7278\n",
      "MAPE: 0.1728\n",
      "MSLE: 0.061303\n"
     ]
    }
   ],
   "source": [
    "# Evaluasi\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_percentage_error, mean_squared_log_error\n",
    "\n",
    "rmse = np.sqrt(mean_squared_error(Y_test, test_data_prediction))\n",
    "mape = mean_absolute_percentage_error(Y_test, test_data_prediction)\n",
    "msle = mean_squared_log_error(Y_test, test_data_prediction)\n",
    "error_score = metrics.r2_score(Y_test, test_data_prediction)\n",
    "\n",
    "print(\"R squared error: \", error_score)\n",
    "print(f\"RMSE: {rmse:.4f}\")\n",
    "print(f\"MAPE: {mape:.4f}\")\n",
    "print(f\"MSLE: {msle:.6f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "88d57082",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.067063Z",
     "iopub.status.busy": "2025-06-29T08:46:53.066546Z",
     "iopub.status.idle": "2025-06-29T08:46:53.070645Z",
     "shell.execute_reply": "2025-06-29T08:46:53.069937Z"
    },
    "papermill": {
     "duration": 0.012346,
     "end_time": "2025-06-29T08:46:53.071922",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.059576",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Y_test = list(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3615abfb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.085265Z",
     "iopub.status.busy": "2025-06-29T08:46:53.084382Z",
     "iopub.status.idle": "2025-06-29T08:46:53.367926Z",
     "shell.execute_reply": "2025-06-29T08:46:53.367043Z"
    },
    "papermill": {
     "duration": 0.291262,
     "end_time": "2025-06-29T08:46:53.369246",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.077984",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Y_test, color=\"blue\", label=\"Actual Value\")\n",
    "plt.plot(test_data_prediction, color=\"green\", label=\"Predicted Value\")\n",
    "plt.title(\"Actual Price vs Predicted Price\")\n",
    "plt.xlabel(\"Number of values\")\n",
    "plt.ylabel(\"GLD Price\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2cafbf3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.383858Z",
     "iopub.status.busy": "2025-06-29T08:46:53.383588Z",
     "iopub.status.idle": "2025-06-29T08:46:53.533378Z",
     "shell.execute_reply": "2025-06-29T08:46:53.532579Z"
    },
    "papermill": {
     "duration": 0.158286,
     "end_time": "2025-06-29T08:46:53.534713",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.376427",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  g_vals = grouped_vals.get_group(g)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Feature Importance dari Random Forest\n",
    "importances = regressor.feature_importances_\n",
    "features = X.columns\n",
    "feature_importance_df = pd.DataFrame({'Feature': features, 'Importance': importances})\n",
    "feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(10,6))\n",
    "sns.barplot(x='Importance', y='Feature', data=feature_importance_df)\n",
    "plt.title('Feature Importance from Random Forest')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3d7f64ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:46:53.551045Z",
     "iopub.status.busy": "2025-06-29T08:46:53.550462Z",
     "iopub.status.idle": "2025-06-29T08:46:53.823675Z",
     "shell.execute_reply": "2025-06-29T08:46:53.822790Z"
    },
    "papermill": {
     "duration": 0.28325,
     "end_time": "2025-06-29T08:46:53.825267",
     "exception": false,
     "start_time": "2025-06-29T08:46:53.542017",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualisasi Prediksi vs Aktual dengan Penambahan Styling\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(Y_test, label='Actual Price', color='blue')\n",
    "plt.plot(test_data_prediction, label='Predicted Price', color='green')\n",
    "plt.title(\"Gold Price Prediction - Random Forest\")\n",
    "plt.xlabel(\"Observation Index\")\n",
    "plt.ylabel(\"Price (Rp)\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11945960,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.393803,
   "end_time": "2025-06-29T08:46:54.453372",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-29T08:46:43.059569",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
