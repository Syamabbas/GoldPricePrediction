{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d6cbe9d4",
   "metadata": {
    "papermill": {
     "duration": 0.002635,
     "end_time": "2025-05-25T11:08:23.117690",
     "exception": false,
     "start_time": "2025-05-25T11:08:23.115055",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# GRU Model\n",
    "- Skenario 1G: Menggunakan semua fitur (harga emas historis, inflasi, IndONIA, nilai tukar, Cadangan Devisa dan Money Supply) sebagai input model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "489d8b97",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:23.123441Z",
     "iopub.status.busy": "2025-05-25T11:08:23.122895Z",
     "iopub.status.idle": "2025-05-25T11:08:24.550571Z",
     "shell.execute_reply": "2025-05-25T11:08:24.549778Z"
    },
    "papermill": {
     "duration": 1.431886,
     "end_time": "2025-05-25T11:08:24.551977",
     "exception": false,
     "start_time": "2025-05-25T11:08:23.120091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Validation Data.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap Fix.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8b4548f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:24.558359Z",
     "iopub.status.busy": "2025-05-25T11:08:24.558097Z",
     "iopub.status.idle": "2025-05-25T11:08:37.909625Z",
     "shell.execute_reply": "2025-05-25T11:08:37.908872Z"
    },
    "papermill": {
     "duration": 13.356636,
     "end_time": "2025-05-25T11:08:37.911144",
     "exception": false,
     "start_time": "2025-05-25T11:08:24.554508",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-25 11:08:26.075158: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1748171306.266161      19 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1748171306.323089      19 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "import keras_tuner as kt\n",
    "\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.metrics import mean_squared_log_error\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score, mean_absolute_percentage_error\n",
    "\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import GRU, Dense, Dropout, Input\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d2422529",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:37.917110Z",
     "iopub.status.busy": "2025-05-25T11:08:37.916696Z",
     "iopub.status.idle": "2025-05-25T11:08:37.952544Z",
     "shell.execute_reply": "2025-05-25T11:08:37.951709Z"
    },
    "papermill": {
     "duration": 0.039836,
     "end_time": "2025-05-25T11:08:37.953731",
     "exception": false,
     "start_time": "2025-05-25T11:08:37.913895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 8 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Inflasi            1932 non-null   float64\n",
      " 4   IndONIA            1932 non-null   float64\n",
      " 5   Cadangan Devisa    1932 non-null   float64\n",
      " 6   Money Supply (M2)  1932 non-null   float64\n",
      " 7   Minyak             1932 non-null   float64\n",
      "dtypes: float64(5), int64(2), object(1)\n",
      "memory usage: 120.9+ KB\n"
     ]
    }
   ],
   "source": [
    "# Load dataset\n",
    "df = pd.read_csv('/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv')\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "40127b39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:37.960040Z",
     "iopub.status.busy": "2025-05-25T11:08:37.959488Z",
     "iopub.status.idle": "2025-05-25T11:08:37.974225Z",
     "shell.execute_reply": "2025-05-25T11:08:37.973701Z"
    },
    "papermill": {
     "duration": 0.018833,
     "end_time": "2025-05-25T11:08:37.975233",
     "exception": false,
     "start_time": "2025-05-25T11:08:37.956400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(['Minyak'], axis=1, inplace=True)\n",
    "df['Date'] = pd.to_datetime(df['Date'])\n",
    "df.sort_values(by='Date', inplace=True)\n",
    "df.reset_index(drop=True, inplace=True)\n",
    "\n",
    "#  'Money Supply (M2)', 'Inflasi','IndONIA', 'Kurs', 'Cadangan Devisa'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6bad2f4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:37.981756Z",
     "iopub.status.busy": "2025-05-25T11:08:37.981309Z",
     "iopub.status.idle": "2025-05-25T11:08:37.991543Z",
     "shell.execute_reply": "2025-05-25T11:08:37.990764Z"
    },
    "papermill": {
     "duration": 0.015127,
     "end_time": "2025-05-25T11:08:37.992579",
     "exception": false,
     "start_time": "2025-05-25T11:08:37.977452",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 7 columns):\n",
      " #   Column             Non-Null Count  Dtype         \n",
      "---  ------             --------------  -----         \n",
      " 0   Date               1932 non-null   datetime64[ns]\n",
      " 1   Price              1932 non-null   float64       \n",
      " 2   Kurs               1932 non-null   float64       \n",
      " 3   Inflasi            1932 non-null   float64       \n",
      " 4   IndONIA            1932 non-null   float64       \n",
      " 5   Cadangan Devisa    1932 non-null   float64       \n",
      " 6   Money Supply (M2)  1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(6)\n",
      "memory usage: 105.8 KB\n"
     ]
    }
   ],
   "source": [
    "# Preprocess numeric columns\n",
    "NumCols = df.columns.drop(['Date'])\n",
    "df[NumCols] = df[NumCols].astype('float64')\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "976f92ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:37.997929Z",
     "iopub.status.busy": "2025-05-25T11:08:37.997526Z",
     "iopub.status.idle": "2025-05-25T11:08:38.003484Z",
     "shell.execute_reply": "2025-05-25T11:08:38.002878Z"
    },
    "papermill": {
     "duration": 0.009645,
     "end_time": "2025-05-25T11:08:38.004517",
     "exception": false,
     "start_time": "2025-05-25T11:08:37.994872",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missing values: 0\n",
      "Duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "# Cek data\n",
    "print(\"Missing values:\", df.isnull().sum().sum())\n",
    "print(\"Duplicates:\", df.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e3a0d85e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:38.010535Z",
     "iopub.status.busy": "2025-05-25T11:08:38.010206Z",
     "iopub.status.idle": "2025-05-25T11:08:38.016424Z",
     "shell.execute_reply": "2025-05-25T11:08:38.015871Z"
    },
    "papermill": {
     "duration": 0.010254,
     "end_time": "2025-05-25T11:08:38.017478",
     "exception": false,
     "start_time": "2025-05-25T11:08:38.007224",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test size: 720\n"
     ]
    }
   ],
   "source": [
    "# Split train/test by date\n",
    "df_train = df[df['Date'].dt.year < 2022]\n",
    "df_test = df[df['Date'].dt.year >= 2022]\n",
    "test_size = df_test.shape[0]\n",
    "print(\"Test size:\", test_size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "15bf9edc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:38.023470Z",
     "iopub.status.busy": "2025-05-25T11:08:38.022839Z",
     "iopub.status.idle": "2025-05-25T11:08:38.029555Z",
     "shell.execute_reply": "2025-05-25T11:08:38.028858Z"
    },
    "papermill": {
     "duration": 0.010723,
     "end_time": "2025-05-25T11:08:38.030744",
     "exception": false,
     "start_time": "2025-05-25T11:08:38.020021",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Scaling\n",
    "scaler = MinMaxScaler()\n",
    "scaled_data = scaler.fit_transform(df[NumCols])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "469fcaa4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:38.036223Z",
     "iopub.status.busy": "2025-05-25T11:08:38.036026Z",
     "iopub.status.idle": "2025-05-25T11:08:38.047421Z",
     "shell.execute_reply": "2025-05-25T11:08:38.046767Z"
    },
    "papermill": {
     "duration": 0.015277,
     "end_time": "2025-05-25T11:08:38.048416",
     "exception": false,
     "start_time": "2025-05-25T11:08:38.033139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train shape: (1152, 60, 6) (1152,)\n",
      "Test shape: (720, 60, 6) (720,)\n"
     ]
    }
   ],
   "source": [
    "# Sliding window multivariate\n",
    "window_size = 60\n",
    "X, y = [], []\n",
    "\n",
    "for i in range(window_size, len(scaled_data)):\n",
    "    X.append(scaled_data[i-window_size:i])\n",
    "    y.append(scaled_data[i, 0])  # Index 0 = 'Price'\n",
    "\n",
    "X = np.array(X)\n",
    "y = np.array(y)\n",
    "\n",
    "# Split back to train/test\n",
    "X_train, X_test = X[:-test_size], X[-test_size:]\n",
    "y_train, y_test = y[:-test_size], y[-test_size:]\n",
    "\n",
    "print(\"Train shape:\", X_train.shape, y_train.shape)\n",
    "print(\"Test shape:\", X_test.shape, y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "44d83fc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:38.054075Z",
     "iopub.status.busy": "2025-05-25T11:08:38.053886Z",
     "iopub.status.idle": "2025-05-25T11:08:38.059144Z",
     "shell.execute_reply": "2025-05-25T11:08:38.058462Z"
    },
    "papermill": {
     "duration": 0.009266,
     "end_time": "2025-05-25T11:08:38.060205",
     "exception": false,
     "start_time": "2025-05-25T11:08:38.050939",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define model builder for Keras Tuner\n",
    "def build_model(hp):\n",
    "    model = Sequential()\n",
    "    model.add(Input(shape=(X_train.shape[1], X_train.shape[2])))\n",
    "\n",
    "    model.add(GRU(units=hp.Int('gru_units_1', 32, 128, step=32), return_sequences=True))\n",
    "    model.add(Dropout(hp.Float('dropout_1', 0.1, 0.5, step=0.1)))\n",
    "\n",
    "    model.add(GRU(units=hp.Int('gru_units_2', 32, 128, step=32), return_sequences=True))\n",
    "    model.add(Dropout(hp.Float('dropout_2', 0.1, 0.5, step=0.1)))\n",
    "\n",
    "    model.add(GRU(units=hp.Int('gru_units_3', 32, 128, step=32)))\n",
    "    model.add(Dropout(hp.Float('dropout_3', 0.1, 0.5, step=0.1)))\n",
    "\n",
    "    model.add(Dense(1))\n",
    "\n",
    "    lr = hp.Float('lr', 1e-4, 1e-2, sampling='log')\n",
    "    model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=lr), loss='mean_squared_error')\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "69710d07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:38.066207Z",
     "iopub.status.busy": "2025-05-25T11:08:38.065678Z",
     "iopub.status.idle": "2025-05-25T11:08:40.767666Z",
     "shell.execute_reply": "2025-05-25T11:08:40.766885Z"
    },
    "papermill": {
     "duration": 2.706391,
     "end_time": "2025-05-25T11:08:40.769134",
     "exception": false,
     "start_time": "2025-05-25T11:08:38.062743",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "I0000 00:00:1748171319.438686      19 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13942 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5\n",
      "I0000 00:00:1748171319.439441      19 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 13942 MB memory:  -> device: 1, name: Tesla T4, pci bus id: 0000:00:05.0, compute capability: 7.5\n"
     ]
    }
   ],
   "source": [
    "# Keras Tuner Random Search\n",
    "tuner = kt.RandomSearch(\n",
    "    build_model,\n",
    "    objective='val_loss',\n",
    "    max_trials=10,\n",
    "    executions_per_trial=1,\n",
    "    directory='gru_tuner_dir',\n",
    "    project_name='gru_tuning'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "dd76699e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:08:40.775551Z",
     "iopub.status.busy": "2025-05-25T11:08:40.775333Z",
     "iopub.status.idle": "2025-05-25T11:10:25.668243Z",
     "shell.execute_reply": "2025-05-25T11:10:25.667571Z"
    },
    "papermill": {
     "duration": 104.897379,
     "end_time": "2025-05-25T11:10:25.669399",
     "exception": false,
     "start_time": "2025-05-25T11:08:40.772020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 10 Complete [00h 00m 11s]\n",
      "val_loss: 0.000474965461762622\n",
      "\n",
      "Best val_loss So Far: 0.0003699788067024201\n",
      "Total elapsed time: 00h 01m 45s\n"
     ]
    }
   ],
   "source": [
    "# Tuning\n",
    "early_stop = EarlyStopping(monitor='val_loss', patience=3, restore_best_weights=True)\n",
    "tuner.search(X_train, y_train, validation_data=(X_test, y_test),\n",
    "             epochs=20, batch_size=32,\n",
    "             callbacks=[early_stop], verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2a336fb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:10:25.676008Z",
     "iopub.status.busy": "2025-05-25T11:10:25.675808Z",
     "iopub.status.idle": "2025-05-25T11:10:27.178929Z",
     "shell.execute_reply": "2025-05-25T11:10:27.178258Z"
    },
    "papermill": {
     "duration": 1.507683,
     "end_time": "2025-05-25T11:10:27.180086",
     "exception": false,
     "start_time": "2025-05-25T11:10:25.672403",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_lib.py:713: UserWarning: Skipping variable loading for optimizer 'adam', because it has 2 variables whereas the saved optimizer has 24 variables. \n",
      "  saveable.load_own_variables(weights_store.get(inner_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 15ms/step\n",
      "MSLE: 0.0001308136217746843\n",
      "TUNED GRU -> RMSE: 0.019234834503320072, MAE: 0.014016826461407462, MAPE: 0.02470372515484374, R2: 0.9894801623162991\n"
     ]
    }
   ],
   "source": [
    "# Best model from tuning\n",
    "best_model = tuner.get_best_models(num_models=1)[0]\n",
    "\n",
    "# Evaluation\n",
    "preds = best_model.predict(X_test)\n",
    "mse = mean_squared_error(y_test, preds)\n",
    "rmse = np.sqrt(mse)\n",
    "mae = mean_absolute_error(y_test, preds)\n",
    "mape = mean_absolute_percentage_error(y_test, preds)\n",
    "r2 = r2_score(y_test, preds)\n",
    "\n",
    "msle = mean_squared_log_error(y_test, preds)\n",
    "print(f\"MSLE: {msle}\")\n",
    "print(f\"TUNED GRU -> RMSE: {rmse}, MAE: {mae}, MAPE: {mape}, R2: {r2}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6c128f80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-25T11:10:27.187459Z",
     "iopub.status.busy": "2025-05-25T11:10:27.187267Z",
     "iopub.status.idle": "2025-05-25T11:10:27.445663Z",
     "shell.execute_reply": "2025-05-25T11:10:27.445005Z"
    },
    "papermill": {
     "duration": 0.263548,
     "end_time": "2025-05-25T11:10:27.447255",
     "exception": false,
     "start_time": "2025-05-25T11:10:27.183707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualisasi Prediksi vs Aktual\n",
    "plt.figure(figsize=(12,6))\n",
    "plt.plot(y_test, label='Actual Price')\n",
    "plt.plot(preds, label='Predicted Price')\n",
    "plt.title('GRU Prediction vs Actual')\n",
    "plt.xlabel('Time Step')\n",
    "plt.ylabel('Normalized Price')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11770496,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31011,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 131.276322,
   "end_time": "2025-05-25T11:10:30.244748",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-25T11:08:18.968426",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
