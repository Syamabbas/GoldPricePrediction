{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ab19aadf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:18.319094Z",
     "iopub.status.busy": "2025-06-29T08:50:18.318202Z",
     "iopub.status.idle": "2025-06-29T08:50:20.084745Z",
     "shell.execute_reply": "2025-06-29T08:50:20.083693Z"
    },
    "papermill": {
     "duration": 1.774728,
     "end_time": "2025-06-29T08:50:20.086150",
     "exception": false,
     "start_time": "2025-06-29T08:50:18.311422",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d07b2a7d",
   "metadata": {
    "papermill": {
     "duration": 0.004377,
     "end_time": "2025-06-29T08:50:20.095457",
     "exception": false,
     "start_time": "2025-06-29T08:50:20.091080",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest\n",
    "- Skenario 1E: Menggunakan semua fitur (harga emas historis, nilai tukar, Cadangan Devisa dan Money Supply) sebagai input model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "be330a77",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:20.105570Z",
     "iopub.status.busy": "2025-06-29T08:50:20.105200Z",
     "iopub.status.idle": "2025-06-29T08:50:22.423612Z",
     "shell.execute_reply": "2025-06-29T08:50:22.422855Z"
    },
    "papermill": {
     "duration": 2.325345,
     "end_time": "2025-06-29T08:50:22.425200",
     "exception": false,
     "start_time": "2025-06-29T08:50:20.099855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2e236cd9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.435842Z",
     "iopub.status.busy": "2025-06-29T08:50:22.435429Z",
     "iopub.status.idle": "2025-06-29T08:50:22.456120Z",
     "shell.execute_reply": "2025-06-29T08:50:22.455401Z"
    },
    "papermill": {
     "duration": 0.027465,
     "end_time": "2025-06-29T08:50:22.457605",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.430140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data = pd.read_csv(\"/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c79a6e69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.468451Z",
     "iopub.status.busy": "2025-06-29T08:50:22.468032Z",
     "iopub.status.idle": "2025-06-29T08:50:22.491970Z",
     "shell.execute_reply": "2025-06-29T08:50:22.490935Z"
    },
    "papermill": {
     "duration": 0.030953,
     "end_time": "2025-06-29T08:50:22.493347",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.462394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/3/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13485</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/4/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13478</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1/5/2017</td>\n",
       "      <td>607000</td>\n",
       "      <td>13370</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1/6/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13347</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1/9/2017</td>\n",
       "      <td>602000</td>\n",
       "      <td>13385</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date   Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "0  1/3/2017  606000  13485            116.9         4936881.99\n",
       "1  1/4/2017  606000  13478            116.9         4936881.99\n",
       "2  1/5/2017  607000  13370            116.9         4936881.99\n",
       "3  1/6/2017  606000  13347            116.9         4936881.99\n",
       "4  1/9/2017  602000  13385            116.9         4936881.99"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e3495f62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.504475Z",
     "iopub.status.busy": "2025-06-29T08:50:22.503883Z",
     "iopub.status.idle": "2025-06-29T08:50:22.513573Z",
     "shell.execute_reply": "2025-06-29T08:50:22.512754Z"
    },
    "papermill": {
     "duration": 0.016695,
     "end_time": "2025-06-29T08:50:22.514922",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.498227",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1927</th>\n",
       "      <td>12/23/2024</td>\n",
       "      <td>1533000</td>\n",
       "      <td>16159</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928</th>\n",
       "      <td>12/24/2024</td>\n",
       "      <td>1520000</td>\n",
       "      <td>16208</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1929</th>\n",
       "      <td>12/27/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16251</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1930</th>\n",
       "      <td>12/30/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16162</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>12/31/2024</td>\n",
       "      <td>1515000</td>\n",
       "      <td>16157</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date    Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "1927  12/23/2024  1533000  16159            155.7         9210815.72\n",
       "1928  12/24/2024  1520000  16208            155.7         9210815.72\n",
       "1929  12/27/2024  1528000  16251            155.7         9210815.72\n",
       "1930  12/30/2024  1528000  16162            155.7         9210815.72\n",
       "1931  12/31/2024  1515000  16157            155.7         9210815.72"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " gold_data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f8faab06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.526615Z",
     "iopub.status.busy": "2025-06-29T08:50:22.525961Z",
     "iopub.status.idle": "2025-06-29T08:50:22.531640Z",
     "shell.execute_reply": "2025-06-29T08:50:22.530642Z"
    },
    "papermill": {
     "duration": 0.013235,
     "end_time": "2025-06-29T08:50:22.533247",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.520012",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1932, 5)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "80144b7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.544640Z",
     "iopub.status.busy": "2025-06-29T08:50:22.544085Z",
     "iopub.status.idle": "2025-06-29T08:50:22.564470Z",
     "shell.execute_reply": "2025-06-29T08:50:22.563516Z"
    },
    "papermill": {
     "duration": 0.027389,
     "end_time": "2025-06-29T08:50:22.565793",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.538404",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Cadangan Devisa    1932 non-null   float64\n",
      " 4   Money Supply (M2)  1932 non-null   float64\n",
      "dtypes: float64(2), int64(2), object(1)\n",
      "memory usage: 75.6+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "20349f2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.577368Z",
     "iopub.status.busy": "2025-06-29T08:50:22.576631Z",
     "iopub.status.idle": "2025-06-29T08:50:22.580187Z",
     "shell.execute_reply": "2025-06-29T08:50:22.579545Z"
    },
    "papermill": {
     "duration": 0.01041,
     "end_time": "2025-06-29T08:50:22.581414",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.571004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# gold_data.drop(['Kurs', 'Cadangan Devisa'], axis=1, inplace=True)\n",
    "#gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dcdf4c50",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.593156Z",
     "iopub.status.busy": "2025-06-29T08:50:22.592784Z",
     "iopub.status.idle": "2025-06-29T08:50:22.606972Z",
     "shell.execute_reply": "2025-06-29T08:50:22.606144Z"
    },
    "papermill": {
     "duration": 0.021262,
     "end_time": "2025-06-29T08:50:22.608254",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.586992",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data['Date'] = pd.to_datetime(gold_data['Date'])\n",
    "gold_data.sort_values(by='Date', ascending=True, inplace=True)\n",
    "gold_data.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b2e3ffbb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.619716Z",
     "iopub.status.busy": "2025-06-29T08:50:22.619070Z",
     "iopub.status.idle": "2025-06-29T08:50:22.631731Z",
     "shell.execute_reply": "2025-06-29T08:50:22.630776Z"
    },
    "papermill": {
     "duration": 0.019825,
     "end_time": "2025-06-29T08:50:22.633110",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.613285",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype         \n",
      "---  ------             --------------  -----         \n",
      " 0   Date               1932 non-null   datetime64[ns]\n",
      " 1   Price              1932 non-null   float64       \n",
      " 2   Kurs               1932 non-null   float64       \n",
      " 3   Cadangan Devisa    1932 non-null   float64       \n",
      " 4   Money Supply (M2)  1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(4)\n",
      "memory usage: 75.6 KB\n"
     ]
    }
   ],
   "source": [
    "# Preprocess numeric columns\n",
    "NumCols = gold_data.columns.drop(['Date'])\n",
    "gold_data[NumCols] = gold_data[NumCols].astype('float64')\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "059b0513",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.644406Z",
     "iopub.status.busy": "2025-06-29T08:50:22.644126Z",
     "iopub.status.idle": "2025-06-29T08:50:22.650621Z",
     "shell.execute_reply": "2025-06-29T08:50:22.649992Z"
    },
    "papermill": {
     "duration": 0.013527,
     "end_time": "2025-06-29T08:50:22.651876",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.638349",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date                 0\n",
       "Price                0\n",
       "Kurs                 0\n",
       "Cadangan Devisa      0\n",
       "Money Supply (M2)    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c35f4a12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.663836Z",
     "iopub.status.busy": "2025-06-29T08:50:22.663087Z",
     "iopub.status.idle": "2025-06-29T08:50:22.669188Z",
     "shell.execute_reply": "2025-06-29T08:50:22.668430Z"
    },
    "papermill": {
     "duration": 0.013452,
     "end_time": "2025-06-29T08:50:22.670480",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.657028",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "print(\"Duplicates:\", gold_data.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "830ad68c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.682213Z",
     "iopub.status.busy": "2025-06-29T08:50:22.681936Z",
     "iopub.status.idle": "2025-06-29T08:50:22.710425Z",
     "shell.execute_reply": "2025-06-29T08:50:22.709623Z"
    },
    "papermill": {
     "duration": 0.035971,
     "end_time": "2025-06-29T08:50:22.712032",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.676061",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1932</td>\n",
       "      <td>1.932000e+03</td>\n",
       "      <td>1932.000000</td>\n",
       "      <td>1932.000000</td>\n",
       "      <td>1.932000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2020-12-31 10:34:17.142857216</td>\n",
       "      <td>9.065005e+05</td>\n",
       "      <td>14578.114389</td>\n",
       "      <td>133.078054</td>\n",
       "      <td>6.955181e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2017-01-03 00:00:00</td>\n",
       "      <td>5.970000e+05</td>\n",
       "      <td>13154.000000</td>\n",
       "      <td>114.800000</td>\n",
       "      <td>4.936882e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019-01-09 18:00:00</td>\n",
       "      <td>6.710000e+05</td>\n",
       "      <td>14078.500000</td>\n",
       "      <td>125.900000</td>\n",
       "      <td>5.670975e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2021-01-04 12:00:00</td>\n",
       "      <td>9.340000e+05</td>\n",
       "      <td>14418.000000</td>\n",
       "      <td>133.600000</td>\n",
       "      <td>6.817622e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2022-12-19 06:00:00</td>\n",
       "      <td>1.024000e+06</td>\n",
       "      <td>15178.000000</td>\n",
       "      <td>139.100000</td>\n",
       "      <td>8.293283e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2024-12-31 00:00:00</td>\n",
       "      <td>1.567000e+06</td>\n",
       "      <td>16741.000000</td>\n",
       "      <td>155.700000</td>\n",
       "      <td>9.210816e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.332594e+05</td>\n",
       "      <td>801.869612</td>\n",
       "      <td>9.271185</td>\n",
       "      <td>1.328749e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Date         Price          Kurs  \\\n",
       "count                           1932  1.932000e+03   1932.000000   \n",
       "mean   2020-12-31 10:34:17.142857216  9.065005e+05  14578.114389   \n",
       "min              2017-01-03 00:00:00  5.970000e+05  13154.000000   \n",
       "25%              2019-01-09 18:00:00  6.710000e+05  14078.500000   \n",
       "50%              2021-01-04 12:00:00  9.340000e+05  14418.000000   \n",
       "75%              2022-12-19 06:00:00  1.024000e+06  15178.000000   \n",
       "max              2024-12-31 00:00:00  1.567000e+06  16741.000000   \n",
       "std                              NaN  2.332594e+05    801.869612   \n",
       "\n",
       "       Cadangan Devisa  Money Supply (M2)  \n",
       "count      1932.000000       1.932000e+03  \n",
       "mean        133.078054       6.955181e+06  \n",
       "min         114.800000       4.936882e+06  \n",
       "25%         125.900000       5.670975e+06  \n",
       "50%         133.600000       6.817622e+06  \n",
       "75%         139.100000       8.293283e+06  \n",
       "max         155.700000       9.210816e+06  \n",
       "std           9.271185       1.328749e+06  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "699410dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.723984Z",
     "iopub.status.busy": "2025-06-29T08:50:22.723713Z",
     "iopub.status.idle": "2025-06-29T08:50:22.728596Z",
     "shell.execute_reply": "2025-06-29T08:50:22.727846Z"
    },
    "papermill": {
     "duration": 0.012401,
     "end_time": "2025-06-29T08:50:22.730004",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.717603",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = gold_data.drop([\"Date\", \"Price\"], axis=1)\n",
    "Y = gold_data[\"Price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "cdba496e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.742395Z",
     "iopub.status.busy": "2025-06-29T08:50:22.742137Z",
     "iopub.status.idle": "2025-06-29T08:50:22.749463Z",
     "shell.execute_reply": "2025-06-29T08:50:22.748542Z"
    },
    "papermill": {
     "duration": 0.015421,
     "end_time": "2025-06-29T08:50:22.750923",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.735502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Kurs  Cadangan Devisa  Money Supply (M2)\n",
      "0     13485.0            116.9         4936881.99\n",
      "1     13478.0            116.9         4936881.99\n",
      "2     13370.0            116.9         4936881.99\n",
      "3     13347.0            116.9         4936881.99\n",
      "4     13385.0            116.9         4936881.99\n",
      "...       ...              ...                ...\n",
      "1927  16159.0            155.7         9210815.72\n",
      "1928  16208.0            155.7         9210815.72\n",
      "1929  16251.0            155.7         9210815.72\n",
      "1930  16162.0            155.7         9210815.72\n",
      "1931  16157.0            155.7         9210815.72\n",
      "\n",
      "[1932 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "715cb632",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.763284Z",
     "iopub.status.busy": "2025-06-29T08:50:22.763005Z",
     "iopub.status.idle": "2025-06-29T08:50:22.768890Z",
     "shell.execute_reply": "2025-06-29T08:50:22.767880Z"
    },
    "papermill": {
     "duration": 0.013527,
     "end_time": "2025-06-29T08:50:22.770294",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.756767",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        606000.0\n",
      "1        606000.0\n",
      "2        607000.0\n",
      "3        606000.0\n",
      "4        602000.0\n",
      "          ...    \n",
      "1927    1533000.0\n",
      "1928    1520000.0\n",
      "1929    1528000.0\n",
      "1930    1528000.0\n",
      "1931    1515000.0\n",
      "Name: Price, Length: 1932, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "14da772f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.783660Z",
     "iopub.status.busy": "2025-06-29T08:50:22.783370Z",
     "iopub.status.idle": "2025-06-29T08:50:22.787095Z",
     "shell.execute_reply": "2025-06-29T08:50:22.786424Z"
    },
    "papermill": {
     "duration": 0.011969,
     "end_time": "2025-06-29T08:50:22.788339",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.776370",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fa09de89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.801066Z",
     "iopub.status.busy": "2025-06-29T08:50:22.800451Z",
     "iopub.status.idle": "2025-06-29T08:50:22.805151Z",
     "shell.execute_reply": "2025-06-29T08:50:22.804443Z"
    },
    "papermill": {
     "duration": 0.01264,
     "end_time": "2025-06-29T08:50:22.806465",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.793825",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_size = int(len(X) * 0.8)\n",
    "X_train, X_test = X[:train_size], X[train_size:]\n",
    "Y_train, Y_test = Y[:train_size], Y[train_size:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1d67df31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.819033Z",
     "iopub.status.busy": "2025-06-29T08:50:22.818753Z",
     "iopub.status.idle": "2025-06-29T08:50:22.822571Z",
     "shell.execute_reply": "2025-06-29T08:50:22.821927Z"
    },
    "papermill": {
     "duration": 0.011744,
     "end_time": "2025-06-29T08:50:22.823869",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.812125",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "regressor = RandomForestRegressor(n_estimators=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f951c9c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:22.836115Z",
     "iopub.status.busy": "2025-06-29T08:50:22.835853Z",
     "iopub.status.idle": "2025-06-29T08:50:23.170448Z",
     "shell.execute_reply": "2025-06-29T08:50:23.169616Z"
    },
    "papermill": {
     "duration": 0.342336,
     "end_time": "2025-06-29T08:50:23.171856",
     "exception": false,
     "start_time": "2025-06-29T08:50:22.829520",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor()"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "cc6188b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.184805Z",
     "iopub.status.busy": "2025-06-29T08:50:23.184480Z",
     "iopub.status.idle": "2025-06-29T08:50:23.194820Z",
     "shell.execute_reply": "2025-06-29T08:50:23.194206Z"
    },
    "papermill": {
     "duration": 0.018152,
     "end_time": "2025-06-29T08:50:23.195954",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.177802",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data_prediction = regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8f1583af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.208654Z",
     "iopub.status.busy": "2025-06-29T08:50:23.207998Z",
     "iopub.status.idle": "2025-06-29T08:50:23.215031Z",
     "shell.execute_reply": "2025-06-29T08:50:23.214013Z"
    },
    "papermill": {
     "duration": 0.014658,
     "end_time": "2025-06-29T08:50:23.216350",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.201692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1056210.         1055510.         1057290.         1051910.\n",
      " 1051910.         1048130.         1049030.         1046890.\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         984192.5\n",
      "  984192.5         984192.5         984192.5         987460.\n",
      "  987460.          987500.          987500.          987500.\n",
      "  987500.          987500.          987500.          987500.\n",
      "  987500.          987500.          987500.          987500.\n",
      "  987500.          987500.          987500.          987500.\n",
      "  988650.          982670.          988650.          982670.\n",
      "  995285.          984409.          995285.          990471.5\n",
      "  980014.          995904.          996504.          990836.\n",
      "  996504.          996034.          995494.          991574.\n",
      "  995874.          995874.          995874.          995874.\n",
      "  995874.          995874.          995874.          995874.\n",
      "  995874.         1010464.         1010464.         1010464.\n",
      "  990880.         1015980.         1007830.66666667 1004484.\n",
      " 1009304.         1011384.         1011384.          989760.\n",
      " 1015020.          989760.          998890.         1000690.\n",
      "  999240.         1015980.         1006260.          990880.\n",
      " 1000690.          998890.         1000690.         1048696.\n",
      " 1044736.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1056356.\n",
      " 1055916.         1046096.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042461.\n",
      " 1042571.         1042611.         1042391.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1011364.         1011364.         1011364.         1011364.\n",
      " 1011364.         1011364.         1011364.         1011364.\n",
      " 1011364.         1011364.         1011364.         1011364.\n",
      " 1011364.         1011364.         1011364.         1011364.\n",
      " 1046394.33333333 1046394.33333333 1046394.33333333 1046394.33333333\n",
      " 1046394.33333333 1046394.33333333 1046394.33333333 1046394.33333333\n",
      " 1046394.33333333 1046394.33333333 1046394.33333333 1046394.33333333\n",
      " 1046394.33333333 1046394.33333333 1046394.33333333 1046394.33333333\n",
      " 1046394.33333333 1046394.33333333 1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1042371.         1042371.         1042371.         1042371.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1046036.         1048696.         1048696.\n",
      " 1065026.         1048696.         1048696.         1063406.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1057006.         1072176.         1044736.         1044736.\n",
      " 1056356.         1055916.         1065526.         1069996.\n",
      " 1070596.         1045996.         1074680.         1079390.\n",
      " 1079250.         1074680.         1078370.         1077110.\n",
      " 1078280.         1079390.         1046776.         1065126.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.         1048696.\n",
      " 1048696.         1048696.         1048696.        ]\n"
     ]
    }
   ],
   "source": [
    "print(test_data_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f6c9d2d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.229308Z",
     "iopub.status.busy": "2025-06-29T08:50:23.229031Z",
     "iopub.status.idle": "2025-06-29T08:50:23.244316Z",
     "shell.execute_reply": "2025-06-29T08:50:23.243409Z"
    },
    "papermill": {
     "duration": 0.02324,
     "end_time": "2025-06-29T08:50:23.245651",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.222411",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R squared error:  -1.455638577996519\n",
      "RMSE: 268360.3437\n",
      "MAPE: 0.1634\n",
      "MSLE: 0.048169\n"
     ]
    }
   ],
   "source": [
    "# Evaluasi\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_percentage_error, mean_squared_log_error\n",
    "\n",
    "rmse = np.sqrt(mean_squared_error(Y_test, test_data_prediction))\n",
    "mape = mean_absolute_percentage_error(Y_test, test_data_prediction)\n",
    "msle = mean_squared_log_error(Y_test, test_data_prediction)\n",
    "error_score = metrics.r2_score(Y_test, test_data_prediction)\n",
    "\n",
    "print(\"R squared error: \", error_score)\n",
    "print(f\"RMSE: {rmse:.4f}\")\n",
    "print(f\"MAPE: {mape:.4f}\")\n",
    "print(f\"MSLE: {msle:.6f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "12b10272",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.258990Z",
     "iopub.status.busy": "2025-06-29T08:50:23.258454Z",
     "iopub.status.idle": "2025-06-29T08:50:23.262285Z",
     "shell.execute_reply": "2025-06-29T08:50:23.261522Z"
    },
    "papermill": {
     "duration": 0.011851,
     "end_time": "2025-06-29T08:50:23.263575",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.251724",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Y_test = list(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "96a09dc9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.276258Z",
     "iopub.status.busy": "2025-06-29T08:50:23.275762Z",
     "iopub.status.idle": "2025-06-29T08:50:23.582356Z",
     "shell.execute_reply": "2025-06-29T08:50:23.581492Z"
    },
    "papermill": {
     "duration": 0.314371,
     "end_time": "2025-06-29T08:50:23.583857",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.269486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Y_test, color=\"blue\", label=\"Actual Value\")\n",
    "plt.plot(test_data_prediction, color=\"green\", label=\"Predicted Value\")\n",
    "plt.title(\"Actual Price vs Predicted Price\")\n",
    "plt.xlabel(\"Number of values\")\n",
    "plt.ylabel(\"GLD Price\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f848f5a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.599554Z",
     "iopub.status.busy": "2025-06-29T08:50:23.599296Z",
     "iopub.status.idle": "2025-06-29T08:50:23.766764Z",
     "shell.execute_reply": "2025-06-29T08:50:23.765952Z"
    },
    "papermill": {
     "duration": 0.17733,
     "end_time": "2025-06-29T08:50:23.768191",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.590861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Feature Importance dari Random Forest\n",
    "importances = regressor.feature_importances_\n",
    "features = X.columns\n",
    "feature_importance_df = pd.DataFrame({'Feature': features, 'Importance': importances})\n",
    "feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(10,6))\n",
    "sns.barplot(x='Importance', y='Feature', data=feature_importance_df)\n",
    "plt.title('Feature Importance from Random Forest')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "1d248ce9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:50:23.783887Z",
     "iopub.status.busy": "2025-06-29T08:50:23.783583Z",
     "iopub.status.idle": "2025-06-29T08:50:24.057420Z",
     "shell.execute_reply": "2025-06-29T08:50:24.056564Z"
    },
    "papermill": {
     "duration": 0.283312,
     "end_time": "2025-06-29T08:50:24.058885",
     "exception": false,
     "start_time": "2025-06-29T08:50:23.775573",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualisasi Prediksi vs Aktual dengan Penambahan Styling\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(Y_test, label='Actual Price', color='blue')\n",
    "plt.plot(test_data_prediction, label='Predicted Price', color='green')\n",
    "plt.title(\"Gold Price Prediction - Random Forest\")\n",
    "plt.xlabel(\"Observation Index\")\n",
    "plt.ylabel(\"Price (Rp)\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11945960,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.823545,
   "end_time": "2025-06-29T08:50:24.686629",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-29T08:50:13.863084",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
