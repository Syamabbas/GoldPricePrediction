{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b07e337d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:21.592931Z",
     "iopub.status.busy": "2025-06-29T08:40:21.592556Z",
     "iopub.status.idle": "2025-06-29T08:40:23.717210Z",
     "shell.execute_reply": "2025-06-29T08:40:23.715872Z"
    },
    "papermill": {
     "duration": 2.134113,
     "end_time": "2025-06-29T08:40:23.718801",
     "exception": false,
     "start_time": "2025-06-29T08:40:21.584688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\n",
      "/kaggle/input/datasethargaemasindikatormoneter/Data Gabungan Lengkap.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c671109",
   "metadata": {
    "papermill": {
     "duration": 0.005092,
     "end_time": "2025-06-29T08:40:23.729648",
     "exception": false,
     "start_time": "2025-06-29T08:40:23.724556",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest\n",
    "- Skenario 1C: Menggunakan harga emas historis + Cadangan Devisa."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "042ce0ba",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:23.742378Z",
     "iopub.status.busy": "2025-06-29T08:40:23.741916Z",
     "iopub.status.idle": "2025-06-29T08:40:26.617195Z",
     "shell.execute_reply": "2025-06-29T08:40:26.615884Z"
    },
    "papermill": {
     "duration": 2.884381,
     "end_time": "2025-06-29T08:40:26.619472",
     "exception": false,
     "start_time": "2025-06-29T08:40:23.735091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8f45cd63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.634836Z",
     "iopub.status.busy": "2025-06-29T08:40:26.634277Z",
     "iopub.status.idle": "2025-06-29T08:40:26.662896Z",
     "shell.execute_reply": "2025-06-29T08:40:26.661735Z"
    },
    "papermill": {
     "duration": 0.039056,
     "end_time": "2025-06-29T08:40:26.664952",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.625896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data = pd.read_csv(\"/kaggle/input/datasethargaemasindikatormoneter/Final Dataset Gold Prediction.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e94bd54f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.677926Z",
     "iopub.status.busy": "2025-06-29T08:40:26.677477Z",
     "iopub.status.idle": "2025-06-29T08:40:26.708195Z",
     "shell.execute_reply": "2025-06-29T08:40:26.706799Z"
    },
    "papermill": {
     "duration": 0.038999,
     "end_time": "2025-06-29T08:40:26.710111",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.671112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/3/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13485</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1/4/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13478</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1/5/2017</td>\n",
       "      <td>607000</td>\n",
       "      <td>13370</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1/6/2017</td>\n",
       "      <td>606000</td>\n",
       "      <td>13347</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1/9/2017</td>\n",
       "      <td>602000</td>\n",
       "      <td>13385</td>\n",
       "      <td>116.9</td>\n",
       "      <td>4936881.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date   Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "0  1/3/2017  606000  13485            116.9         4936881.99\n",
       "1  1/4/2017  606000  13478            116.9         4936881.99\n",
       "2  1/5/2017  607000  13370            116.9         4936881.99\n",
       "3  1/6/2017  606000  13347            116.9         4936881.99\n",
       "4  1/9/2017  602000  13385            116.9         4936881.99"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "69adf222",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.725068Z",
     "iopub.status.busy": "2025-06-29T08:40:26.723443Z",
     "iopub.status.idle": "2025-06-29T08:40:26.735922Z",
     "shell.execute_reply": "2025-06-29T08:40:26.734926Z"
    },
    "papermill": {
     "duration": 0.021627,
     "end_time": "2025-06-29T08:40:26.737499",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.715872",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Kurs</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "      <th>Money Supply (M2)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1927</th>\n",
       "      <td>12/23/2024</td>\n",
       "      <td>1533000</td>\n",
       "      <td>16159</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928</th>\n",
       "      <td>12/24/2024</td>\n",
       "      <td>1520000</td>\n",
       "      <td>16208</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1929</th>\n",
       "      <td>12/27/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16251</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1930</th>\n",
       "      <td>12/30/2024</td>\n",
       "      <td>1528000</td>\n",
       "      <td>16162</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>12/31/2024</td>\n",
       "      <td>1515000</td>\n",
       "      <td>16157</td>\n",
       "      <td>155.7</td>\n",
       "      <td>9210815.72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date    Price   Kurs  Cadangan Devisa  Money Supply (M2)\n",
       "1927  12/23/2024  1533000  16159            155.7         9210815.72\n",
       "1928  12/24/2024  1520000  16208            155.7         9210815.72\n",
       "1929  12/27/2024  1528000  16251            155.7         9210815.72\n",
       "1930  12/30/2024  1528000  16162            155.7         9210815.72\n",
       "1931  12/31/2024  1515000  16157            155.7         9210815.72"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " gold_data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5d9e222a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.749707Z",
     "iopub.status.busy": "2025-06-29T08:40:26.749331Z",
     "iopub.status.idle": "2025-06-29T08:40:26.756131Z",
     "shell.execute_reply": "2025-06-29T08:40:26.755127Z"
    },
    "papermill": {
     "duration": 0.014878,
     "end_time": "2025-06-29T08:40:26.757754",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.742876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1932, 5)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c8e6c0f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.769754Z",
     "iopub.status.busy": "2025-06-29T08:40:26.769387Z",
     "iopub.status.idle": "2025-06-29T08:40:26.797042Z",
     "shell.execute_reply": "2025-06-29T08:40:26.795783Z"
    },
    "papermill": {
     "duration": 0.036005,
     "end_time": "2025-06-29T08:40:26.799138",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.763133",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Date               1932 non-null   object \n",
      " 1   Price              1932 non-null   int64  \n",
      " 2   Kurs               1932 non-null   int64  \n",
      " 3   Cadangan Devisa    1932 non-null   float64\n",
      " 4   Money Supply (M2)  1932 non-null   float64\n",
      "dtypes: float64(2), int64(2), object(1)\n",
      "memory usage: 75.6+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b22d143a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.813235Z",
     "iopub.status.busy": "2025-06-29T08:40:26.811874Z",
     "iopub.status.idle": "2025-06-29T08:40:26.827431Z",
     "shell.execute_reply": "2025-06-29T08:40:26.826176Z"
    },
    "papermill": {
     "duration": 0.024021,
     "end_time": "2025-06-29T08:40:26.829179",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.805158",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 3 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   Date             1932 non-null   object \n",
      " 1   Price            1932 non-null   int64  \n",
      " 2   Cadangan Devisa  1932 non-null   float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 45.4+ KB\n"
     ]
    }
   ],
   "source": [
    "gold_data.drop(['Kurs', 'Money Supply (M2)'], axis=1, inplace=True)\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b43a6ccd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.842977Z",
     "iopub.status.busy": "2025-06-29T08:40:26.842534Z",
     "iopub.status.idle": "2025-06-29T08:40:26.859166Z",
     "shell.execute_reply": "2025-06-29T08:40:26.857813Z"
    },
    "papermill": {
     "duration": 0.025435,
     "end_time": "2025-06-29T08:40:26.861229",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.835794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "gold_data['Date'] = pd.to_datetime(gold_data['Date'])\n",
    "gold_data.sort_values(by='Date', inplace=True)\n",
    "gold_data.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7511611a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.874896Z",
     "iopub.status.busy": "2025-06-29T08:40:26.874461Z",
     "iopub.status.idle": "2025-06-29T08:40:26.888160Z",
     "shell.execute_reply": "2025-06-29T08:40:26.886951Z"
    },
    "papermill": {
     "duration": 0.023092,
     "end_time": "2025-06-29T08:40:26.890112",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.867020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 3 columns):\n",
      " #   Column           Non-Null Count  Dtype         \n",
      "---  ------           --------------  -----         \n",
      " 0   Date             1932 non-null   datetime64[ns]\n",
      " 1   Price            1932 non-null   float64       \n",
      " 2   Cadangan Devisa  1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(2)\n",
      "memory usage: 45.4 KB\n"
     ]
    }
   ],
   "source": [
    "# Preprocess numeric columns\n",
    "NumCols = gold_data.columns.drop(['Date'])\n",
    "gold_data[NumCols] = gold_data[NumCols].astype('float64')\n",
    "gold_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2eb26882",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.903440Z",
     "iopub.status.busy": "2025-06-29T08:40:26.903114Z",
     "iopub.status.idle": "2025-06-29T08:40:26.911694Z",
     "shell.execute_reply": "2025-06-29T08:40:26.910633Z"
    },
    "papermill": {
     "duration": 0.017646,
     "end_time": "2025-06-29T08:40:26.913647",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.896001",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date               0\n",
       "Price              0\n",
       "Cadangan Devisa    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6bf4fd90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.927006Z",
     "iopub.status.busy": "2025-06-29T08:40:26.926464Z",
     "iopub.status.idle": "2025-06-29T08:40:26.934921Z",
     "shell.execute_reply": "2025-06-29T08:40:26.933757Z"
    },
    "papermill": {
     "duration": 0.016884,
     "end_time": "2025-06-29T08:40:26.936616",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.919732",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "print(\"Duplicates:\", gold_data.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3e6fd305",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.950045Z",
     "iopub.status.busy": "2025-06-29T08:40:26.949664Z",
     "iopub.status.idle": "2025-06-29T08:40:26.975265Z",
     "shell.execute_reply": "2025-06-29T08:40:26.974118Z"
    },
    "papermill": {
     "duration": 0.034531,
     "end_time": "2025-06-29T08:40:26.977205",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.942674",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "      <th>Cadangan Devisa</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1932</td>\n",
       "      <td>1.932000e+03</td>\n",
       "      <td>1932.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2020-12-31 10:34:17.142857216</td>\n",
       "      <td>9.065005e+05</td>\n",
       "      <td>133.078054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2017-01-03 00:00:00</td>\n",
       "      <td>5.970000e+05</td>\n",
       "      <td>114.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019-01-09 18:00:00</td>\n",
       "      <td>6.710000e+05</td>\n",
       "      <td>125.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2021-01-04 12:00:00</td>\n",
       "      <td>9.340000e+05</td>\n",
       "      <td>133.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2022-12-19 06:00:00</td>\n",
       "      <td>1.024000e+06</td>\n",
       "      <td>139.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2024-12-31 00:00:00</td>\n",
       "      <td>1.567000e+06</td>\n",
       "      <td>155.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2.332594e+05</td>\n",
       "      <td>9.271185</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Date         Price  Cadangan Devisa\n",
       "count                           1932  1.932000e+03      1932.000000\n",
       "mean   2020-12-31 10:34:17.142857216  9.065005e+05       133.078054\n",
       "min              2017-01-03 00:00:00  5.970000e+05       114.800000\n",
       "25%              2019-01-09 18:00:00  6.710000e+05       125.900000\n",
       "50%              2021-01-04 12:00:00  9.340000e+05       133.600000\n",
       "75%              2022-12-19 06:00:00  1.024000e+06       139.100000\n",
       "max              2024-12-31 00:00:00  1.567000e+06       155.700000\n",
       "std                              NaN  2.332594e+05         9.271185"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gold_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9e6d3735",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:26.991039Z",
     "iopub.status.busy": "2025-06-29T08:40:26.990512Z",
     "iopub.status.idle": "2025-06-29T08:40:26.996811Z",
     "shell.execute_reply": "2025-06-29T08:40:26.995827Z"
    },
    "papermill": {
     "duration": 0.015404,
     "end_time": "2025-06-29T08:40:26.998793",
     "exception": false,
     "start_time": "2025-06-29T08:40:26.983389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = gold_data.drop([\"Date\", \"Price\"], axis=1)\n",
    "Y = gold_data[\"Price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "18582bfe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.012683Z",
     "iopub.status.busy": "2025-06-29T08:40:27.012358Z",
     "iopub.status.idle": "2025-06-29T08:40:27.019893Z",
     "shell.execute_reply": "2025-06-29T08:40:27.018942Z"
    },
    "papermill": {
     "duration": 0.016641,
     "end_time": "2025-06-29T08:40:27.021680",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.005039",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Cadangan Devisa\n",
      "0               116.9\n",
      "1               116.9\n",
      "2               116.9\n",
      "3               116.9\n",
      "4               116.9\n",
      "...               ...\n",
      "1927            155.7\n",
      "1928            155.7\n",
      "1929            155.7\n",
      "1930            155.7\n",
      "1931            155.7\n",
      "\n",
      "[1932 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "fed8344b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.034806Z",
     "iopub.status.busy": "2025-06-29T08:40:27.034512Z",
     "iopub.status.idle": "2025-06-29T08:40:27.041953Z",
     "shell.execute_reply": "2025-06-29T08:40:27.040605Z"
    },
    "papermill": {
     "duration": 0.015641,
     "end_time": "2025-06-29T08:40:27.043457",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.027816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        606000.0\n",
      "1        606000.0\n",
      "2        607000.0\n",
      "3        606000.0\n",
      "4        602000.0\n",
      "          ...    \n",
      "1927    1533000.0\n",
      "1928    1520000.0\n",
      "1929    1528000.0\n",
      "1930    1528000.0\n",
      "1931    1515000.0\n",
      "Name: Price, Length: 1932, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fc3e222b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.057047Z",
     "iopub.status.busy": "2025-06-29T08:40:27.056621Z",
     "iopub.status.idle": "2025-06-29T08:40:27.063937Z",
     "shell.execute_reply": "2025-06-29T08:40:27.062442Z"
    },
    "papermill": {
     "duration": 0.016483,
     "end_time": "2025-06-29T08:40:27.065960",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.049477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_size = int(len(X) * 0.8)\n",
    "X_train, X_test = X[:train_size], X[train_size:]\n",
    "Y_train, Y_test = Y[:train_size], Y[train_size:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "aa79fd21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.080199Z",
     "iopub.status.busy": "2025-06-29T08:40:27.079799Z",
     "iopub.status.idle": "2025-06-29T08:40:27.085062Z",
     "shell.execute_reply": "2025-06-29T08:40:27.083950Z"
    },
    "papermill": {
     "duration": 0.014729,
     "end_time": "2025-06-29T08:40:27.086772",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.072043",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0d6b89c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.100128Z",
     "iopub.status.busy": "2025-06-29T08:40:27.099744Z",
     "iopub.status.idle": "2025-06-29T08:40:27.105090Z",
     "shell.execute_reply": "2025-06-29T08:40:27.103953Z"
    },
    "papermill": {
     "duration": 0.014147,
     "end_time": "2025-06-29T08:40:27.106885",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.092738",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "regressor = RandomForestRegressor(n_estimators=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2ad5a4fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.121496Z",
     "iopub.status.busy": "2025-06-29T08:40:27.120185Z",
     "iopub.status.idle": "2025-06-29T08:40:27.289418Z",
     "shell.execute_reply": "2025-06-29T08:40:27.288468Z"
    },
    "papermill": {
     "duration": 0.17836,
     "end_time": "2025-06-29T08:40:27.291366",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.113006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor()"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0fd8c9ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.306719Z",
     "iopub.status.busy": "2025-06-29T08:40:27.306391Z",
     "iopub.status.idle": "2025-06-29T08:40:27.318549Z",
     "shell.execute_reply": "2025-06-29T08:40:27.317540Z"
    },
    "papermill": {
     "duration": 0.021779,
     "end_time": "2025-06-29T08:40:27.320541",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.298762",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data_prediction = regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0893a3ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.334794Z",
     "iopub.status.busy": "2025-06-29T08:40:27.334458Z",
     "iopub.status.idle": "2025-06-29T08:40:27.343490Z",
     "shell.execute_reply": "2025-06-29T08:40:27.341692Z"
    },
    "papermill": {
     "duration": 0.018664,
     "end_time": "2025-06-29T08:40:27.345676",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.327012",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1062898.40776863 1062898.40776863 1062898.40776863 1062898.40776863\n",
      " 1062898.40776863 1062898.40776863 1062898.40776863 1062898.40776863\n",
      "  944465.0947911   944465.0947911   944465.0947911   944465.0947911\n",
      "  944465.0947911   944465.0947911   944465.0947911   944465.0947911\n",
      "  944465.0947911   944465.0947911   944465.0947911   944465.0947911\n",
      "  944465.0947911   944465.0947911   944465.0947911   944465.0947911\n",
      "  944465.0947911   960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  932162.44183604  932162.44183604  932162.44183604\n",
      "  932162.44183604  932162.44183604  932162.44183604  932162.44183604\n",
      "  932162.44183604  932162.44183604  932162.44183604  932162.44183604\n",
      "  932162.44183604  932162.44183604  932162.44183604  932162.44183604\n",
      "  932162.44183604  932162.44183604  932162.44183604  932162.44183604\n",
      "  932162.44183604  932162.44183604  932162.44183604  956474.70890898\n",
      "  956474.70890898  956474.70890898  956474.70890898  956474.70890898\n",
      "  956474.70890898  956474.70890898  956474.70890898  956474.70890898\n",
      "  956474.70890898  956474.70890898  956474.70890898  956474.70890898\n",
      "  956474.70890898  956474.70890898  956474.70890898  956474.70890898\n",
      "  956474.70890898  956474.70890898  956474.70890898  977035.09504731\n",
      "  977035.09504731  977035.09504731  977035.09504731  977035.09504731\n",
      "  977035.09504731  977035.09504731  977035.09504731  977035.09504731\n",
      "  977035.09504731  977035.09504731  977035.09504731  977035.09504731\n",
      "  977035.09504731  977035.09504731  977035.09504731  977035.09504731\n",
      "  977035.09504731  977035.09504731  977035.09504731  977035.09504731\n",
      "  977035.09504731  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  960657.44528542\n",
      "  960657.44528542  960657.44528542  960657.44528542  939765.47656998\n",
      "  939765.47656998  939765.47656998  939765.47656998  939765.47656998\n",
      "  939765.47656998  939765.47656998  939765.47656998  939765.47656998\n",
      "  939765.47656998  939765.47656998  939765.47656998  939765.47656998\n",
      "  939765.47656998  939765.47656998  939765.47656998  939765.47656998\n",
      "  939765.47656998  939765.47656998 1057087.43593962 1057087.43593962\n",
      " 1057087.43593962 1057087.43593962 1057087.43593962 1057087.43593962\n",
      " 1057087.43593962 1057087.43593962 1057087.43593962 1057087.43593962\n",
      " 1057087.43593962 1057087.43593962 1057087.43593962 1057087.43593962\n",
      " 1057087.43593962 1057087.43593962 1057087.43593962 1057087.43593962\n",
      " 1057087.43593962 1057087.43593962 1057087.43593962 1057087.43593962\n",
      " 1069827.90091389 1069827.90091389 1069827.90091389 1069827.90091389\n",
      " 1069827.90091389 1069827.90091389 1069827.90091389 1069827.90091389\n",
      " 1069827.90091389 1069827.90091389 1069827.90091389 1069827.90091389\n",
      " 1069827.90091389 1069827.90091389 1069827.90091389 1069827.90091389\n",
      " 1069827.90091389 1069827.90091389 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      "  969089.38382164  969089.38382164  969089.38382164  969089.38382164\n",
      "  969089.38382164  969089.38382164  969089.38382164  969089.38382164\n",
      "  969089.38382164  969089.38382164  969089.38382164  969089.38382164\n",
      "  969089.38382164  969089.38382164  969089.38382164  969089.38382164\n",
      "  995340.93660057  995340.93660057  995340.93660057  995340.93660057\n",
      "  995340.93660057  995340.93660057  995340.93660057  995340.93660057\n",
      "  995340.93660057  995340.93660057  995340.93660057  995340.93660057\n",
      "  995340.93660057  995340.93660057  995340.93660057  995340.93660057\n",
      "  995340.93660057  995340.93660057 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      " 1024181.84801251 1024181.84801251 1024181.84801251 1024181.84801251\n",
      "  921965.53378935  921965.53378935  921965.53378935  921965.53378935\n",
      "  921965.53378935  921965.53378935  921965.53378935  921965.53378935\n",
      "  921965.53378935  921965.53378935  921965.53378935  921965.53378935\n",
      "  921965.53378935  921965.53378935  921965.53378935  921965.53378935\n",
      "  921965.53378935  921965.53378935  921965.53378935  921965.53378935\n",
      "  921965.53378935  921965.53378935  921965.53378935  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021  928035.59241021\n",
      "  928035.59241021  928035.59241021  928035.59241021]\n"
     ]
    }
   ],
   "source": [
    "print(test_data_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "799f4951",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.361037Z",
     "iopub.status.busy": "2025-06-29T08:40:27.360593Z",
     "iopub.status.idle": "2025-06-29T08:40:27.379120Z",
     "shell.execute_reply": "2025-06-29T08:40:27.377929Z"
    },
    "papermill": {
     "duration": 0.028069,
     "end_time": "2025-06-29T08:40:27.380729",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.352660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R squared error:  -2.9979203744834626\n",
      "RMSE: 342415.3189\n",
      "MAPE: 0.2097\n",
      "MSLE: 0.086759\n"
     ]
    }
   ],
   "source": [
    "# Evaluasi\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_percentage_error, mean_squared_log_error\n",
    "\n",
    "rmse = np.sqrt(mean_squared_error(Y_test, test_data_prediction))\n",
    "mape = mean_absolute_percentage_error(Y_test, test_data_prediction)\n",
    "msle = mean_squared_log_error(Y_test, test_data_prediction)\n",
    "error_score = metrics.r2_score(Y_test, test_data_prediction)\n",
    "\n",
    "print(\"R squared error: \", error_score)\n",
    "print(f\"RMSE: {rmse:.4f}\")\n",
    "print(f\"MAPE: {mape:.4f}\")\n",
    "print(f\"MSLE: {msle:.6f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "64ae4ba7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.395441Z",
     "iopub.status.busy": "2025-06-29T08:40:27.395061Z",
     "iopub.status.idle": "2025-06-29T08:40:27.400060Z",
     "shell.execute_reply": "2025-06-29T08:40:27.398936Z"
    },
    "papermill": {
     "duration": 0.01461,
     "end_time": "2025-06-29T08:40:27.401970",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.387360",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Y_test = list(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c67bdd97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.416918Z",
     "iopub.status.busy": "2025-06-29T08:40:27.416505Z",
     "iopub.status.idle": "2025-06-29T08:40:27.787485Z",
     "shell.execute_reply": "2025-06-29T08:40:27.786372Z"
    },
    "papermill": {
     "duration": 0.380511,
     "end_time": "2025-06-29T08:40:27.789472",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.408961",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Y_test, color=\"blue\", label=\"Actual Value\")\n",
    "plt.plot(test_data_prediction, color=\"green\", label=\"Predicted Value\")\n",
    "plt.title(\"Actual Price vs Predicted Price\")\n",
    "plt.xlabel(\"Number of values\")\n",
    "plt.ylabel(\"GLD Price\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7cdd5273",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.806717Z",
     "iopub.status.busy": "2025-06-29T08:40:27.805717Z",
     "iopub.status.idle": "2025-06-29T08:40:27.978042Z",
     "shell.execute_reply": "2025-06-29T08:40:27.976924Z"
    },
    "papermill": {
     "duration": 0.182366,
     "end_time": "2025-06-29T08:40:27.979709",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.797343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n",
      "  g_vals = grouped_vals.get_group(g)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Feature Importance dari Random Forest\n",
    "importances = regressor.feature_importances_\n",
    "features = X.columns\n",
    "feature_importance_df = pd.DataFrame({'Feature': features, 'Importance': importances})\n",
    "feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(10,6))\n",
    "sns.barplot(x='Importance', y='Feature', data=feature_importance_df)\n",
    "plt.title('Feature Importance from Random Forest')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "20f8806a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-29T08:40:27.998008Z",
     "iopub.status.busy": "2025-06-29T08:40:27.997639Z",
     "iopub.status.idle": "2025-06-29T08:40:28.308402Z",
     "shell.execute_reply": "2025-06-29T08:40:28.307242Z"
    },
    "papermill": {
     "duration": 0.321877,
     "end_time": "2025-06-29T08:40:28.310406",
     "exception": false,
     "start_time": "2025-06-29T08:40:27.988529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualisasi Prediksi vs Aktual dengan Penambahan Styling\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(Y_test, label='Actual Price', color='blue')\n",
    "plt.plot(test_data_prediction, label='Predicted Price', color='green')\n",
    "plt.title(\"Gold Price Prediction - Random Forest\")\n",
    "plt.xlabel(\"Observation Index\")\n",
    "plt.ylabel(\"Price (Rp)\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11945960,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.851535,
   "end_time": "2025-06-29T08:40:29.042084",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-29T08:40:16.190549",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
